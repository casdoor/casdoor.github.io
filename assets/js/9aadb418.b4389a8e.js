"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[1749],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),h=r,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||a;return t?o.createElement(m,i(i({ref:n},p),{},{components:t})):o.createElement(m,i({ref:n},p))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},47858:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=t(87462),r=(t(67294),t(3905));const a={title:"Chrome Extension",description:"Using Casdoor in Chrome extension",keywords:["chrome extension","browser extension","oauth"],authors:["hsluoyz"]},i=void 0,s={unversionedId:"how-to-connect/chrome-extension",id:"how-to-connect/chrome-extension",title:"Chrome Extension",description:"Using Casdoor in Chrome extension",source:"@site/docs/how-to-connect/chrome-extension.md",sourceDirName:"how-to-connect",slug:"/how-to-connect/chrome-extension",permalink:"/docs/how-to-connect/chrome-extension",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/how-to-connect/chrome-extension.md",tags:[],version:"current",frontMatter:{title:"Chrome Extension",description:"Using Casdoor in Chrome extension",keywords:["chrome extension","browser extension","oauth"],authors:["hsluoyz"]},sidebar:"tutorialSidebar",previous:{title:"Casdoor Plugin",permalink:"/docs/how-to-connect/plugin"},next:{title:"Next.js",permalink:"/docs/how-to-connect/nextjs"}},l={},c=[{value:"Step 1: Deploy Casdoor",id:"step-1-deploy-casdoor",level:2},{value:"Step 2: Configure Casdoor Application",id:"step-2-configure-casdoor-application",level:2},{value:"Step 3: Set Up Chrome Extension",id:"step-3-set-up-chrome-extension",level:2},{value:"1. Create Manifest File",id:"1-create-manifest-file",level:3},{value:"2. Configure Extension Identity",id:"2-configure-extension-identity",level:3},{value:"Step 4: Implement Authentication Flow",id:"step-4-implement-authentication-flow",level:2},{value:"1. Create Background Script",id:"1-create-background-script",level:3},{value:"2. Create Popup HTML",id:"2-create-popup-html",level:3},{value:"3. Create Popup Script",id:"3-create-popup-script",level:3},{value:"Step 5: Load and Test the Extension",id:"step-5-load-and-test-the-extension",level:2},{value:"Step 6: Handle Token Storage and Refresh",id:"step-6-handle-token-storage-and-refresh",level:2},{value:"What&#39;s More",id:"whats-more",level:2}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/casdoor/casdoor-chrome-extension"},"casdoor-chrome-extension")," is an example of how to integrate Casdoor in a Chrome browser extension. We will guide you through the steps below."),(0,r.kt)("h2",{id:"step-1-deploy-casdoor"},"Step 1: Deploy Casdoor"),(0,r.kt)("p",null,"Firstly, Casdoor should be deployed."),(0,r.kt)("p",null,"You can refer to the Casdoor official documentation for the ",(0,r.kt)("a",{parentName:"p",href:"/docs/basic/server-installation"},"Server Installation"),". Please deploy your Casdoor instance in ",(0,r.kt)("strong",{parentName:"p"},"production mode"),"."),(0,r.kt)("p",null,"After a successful deployment, make sure the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Open your favorite browser and visit ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"http://localhost:8000"},"http://localhost:8000")),". You will see the login page of Casdoor."),(0,r.kt)("li",{parentName:"ul"},"Test the login functionality by entering ",(0,r.kt)("inlineCode",{parentName:"li"},"admin")," as the username and ",(0,r.kt)("inlineCode",{parentName:"li"},"123")," as the password.")),(0,r.kt)("p",null,"After that, you can quickly implement a Casdoor-based login page in your Chrome extension using the following steps."),(0,r.kt)("h2",{id:"step-2-configure-casdoor-application"},"Step 2: Configure Casdoor Application"),(0,r.kt)("p",null,"Before using Casdoor for authentication in your Chrome extension, you need to configure a Casdoor application:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to your Casdoor instance and navigate to ",(0,r.kt)("strong",{parentName:"li"},"Applications"),"."),(0,r.kt)("li",{parentName:"ol"},"Create a new application or use an existing one."),(0,r.kt)("li",{parentName:"ol"},"Configure the application settings:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set the ",(0,r.kt)("strong",{parentName:"li"},"Redirect URLs")," to include your Chrome extension URL. For example: ",(0,r.kt)("inlineCode",{parentName:"li"},"https://<extension-id>.chromiumapp.org/")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:3000/callback")," for development."),(0,r.kt)("li",{parentName:"ul"},"Note down the ",(0,r.kt)("strong",{parentName:"li"},"Client ID")," and ",(0,r.kt)("strong",{parentName:"li"},"Client Secret"),"."),(0,r.kt)("li",{parentName:"ul"},"Make sure the application has proper OAuth settings enabled.")))),(0,r.kt)("h2",{id:"step-3-set-up-chrome-extension"},"Step 3: Set Up Chrome Extension"),(0,r.kt)("h3",{id:"1-create-manifest-file"},"1. Create Manifest File"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest.json")," file in your Chrome extension project with the necessary permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "manifest_version": 3,\n  "name": "Casdoor Chrome Extension",\n  "version": "1.0.0",\n  "description": "Chrome extension integrated with Casdoor",\n  "permissions": [\n    "identity",\n    "storage"\n  ],\n  "host_permissions": [\n    "http://localhost:8000/*",\n    "https://door.casdoor.com/*"\n  ],\n  "action": {\n    "default_popup": "popup.html",\n    "default_icon": {\n      "16": "icons/icon16.png",\n      "48": "icons/icon48.png",\n      "128": "icons/icon128.png"\n    }\n  },\n  "background": {\n    "service_worker": "background.js"\n  }\n}\n')),(0,r.kt)("h3",{id:"2-configure-extension-identity"},"2. Configure Extension Identity"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"manifest.json"),", you may need to add OAuth2 configuration if using Chrome's identity API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "oauth2": {\n    "client_id": "your-client-id.apps.googleusercontent.com",\n    "scopes": ["openid", "profile", "email"]\n  }\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Replace the configuration values with your own Casdoor instance, especially the ",(0,r.kt)("inlineCode",{parentName:"p"},"client_id")," and the host permissions URLs.")),(0,r.kt)("h2",{id:"step-4-implement-authentication-flow"},"Step 4: Implement Authentication Flow"),(0,r.kt)("h3",{id:"1-create-background-script"},"1. Create Background Script"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"background.js")," file to handle the authentication:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const CASDOOR_ENDPOINT = \"http://localhost:8000\";\nconst CLIENT_ID = \"your-client-id\";\nconst CLIENT_SECRET = \"your-client-secret\";\nconst ORGANIZATION_NAME = \"built-in\";\nconst APPLICATION_NAME = \"app-built-in\";\nconst REDIRECT_URI = chrome.identity.getRedirectURL();\n\n// Generate the authorization URL\nfunction getAuthUrl() {\n  const state = Math.random().toString(36).substring(7);\n  const authUrl = `${CASDOOR_ENDPOINT}/login/oauth/authorize?client_id=${CLIENT_ID}&response_type=code&redirect_uri=${encodeURIComponent(REDIRECT_URI)}&scope=openid%20profile%20email&state=${state}`;\n  \n  chrome.storage.local.set({ oauthState: state });\n  \n  return authUrl;\n}\n\n// Handle OAuth callback\nasync function handleOAuthCallback(redirectUrl) {\n  const url = new URL(redirectUrl);\n  const code = url.searchParams.get('code');\n  const state = url.searchParams.get('state');\n  \n  // Verify state\n  const { oauthState } = await chrome.storage.local.get('oauthState');\n  if (state !== oauthState) {\n    throw new Error('Invalid state parameter');\n  }\n  \n  // Exchange code for token\n  const tokenResponse = await fetch(`${CASDOOR_ENDPOINT}/api/login/oauth/access_token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      grant_type: 'authorization_code',\n      client_id: CLIENT_ID,\n      client_secret: CLIENT_SECRET,\n      code: code,\n      redirect_uri: REDIRECT_URI,\n    }),\n  });\n  \n  const tokenData = await tokenResponse.json();\n  return tokenData;\n}\n\n// Listen for messages from popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.action === 'login') {\n    chrome.identity.launchWebAuthFlow(\n      {\n        url: getAuthUrl(),\n        interactive: true,\n      },\n      async (redirectUrl) => {\n        if (chrome.runtime.lastError || !redirectUrl) {\n          sendResponse({ error: chrome.runtime.lastError?.message });\n          return;\n        }\n        \n        try {\n          const tokenData = await handleOAuthCallback(redirectUrl);\n          await chrome.storage.local.set({ user: tokenData });\n          sendResponse({ success: true, data: tokenData });\n        } catch (error) {\n          sendResponse({ error: error.message });\n        }\n      }\n    );\n    return true; // Keep the message channel open for async response\n  }\n  \n  if (request.action === 'logout') {\n    chrome.storage.local.remove(['user', 'oauthState'], () => {\n      sendResponse({ success: true });\n    });\n    return true;\n  }\n  \n  if (request.action === 'getUser') {\n    chrome.storage.local.get('user', (result) => {\n      sendResponse({ user: result.user });\n    });\n    return true;\n  }\n});\n")),(0,r.kt)("h3",{id:"2-create-popup-html"},"2. Create Popup HTML"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"popup.html")," file for the extension popup:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="UTF-8">\n  <title>Casdoor Login</title>\n  <style>\n    body {\n      width: 300px;\n      padding: 20px;\n      font-family: Arial, sans-serif;\n    }\n    button {\n      width: 100%;\n      padding: 10px;\n      margin: 5px 0;\n      cursor: pointer;\n      background-color: #4285f4;\n      color: white;\n      border: none;\n      border-radius: 4px;\n    }\n    button:hover {\n      background-color: #357ae8;\n    }\n    #user-info {\n      margin-top: 20px;\n    }\n  </style>\n</head>\n<body>\n  <div id="login-section">\n    <h2>Casdoor Login</h2>\n    <button id="login-btn">Login with Casdoor</button>\n  </div>\n  \n  <div id="user-section" style="display: none;">\n    <h2>Welcome!</h2>\n    <div id="user-info"></div>\n    <button id="logout-btn">Logout</button>\n  </div>\n  \n  <script src="popup.js"><\/script>\n</body>\n</html>\n')),(0,r.kt)("h3",{id:"3-create-popup-script"},"3. Create Popup Script"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"popup.js")," file to handle user interactions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"document.addEventListener('DOMContentLoaded', () => {\n  const loginSection = document.getElementById('login-section');\n  const userSection = document.getElementById('user-section');\n  const loginBtn = document.getElementById('login-btn');\n  const logoutBtn = document.getElementById('logout-btn');\n  const userInfo = document.getElementById('user-info');\n  \n  // Check if user is already logged in\n  chrome.runtime.sendMessage({ action: 'getUser' }, (response) => {\n    if (response.user) {\n      showUserSection(response.user);\n    } else {\n      showLoginSection();\n    }\n  });\n  \n  loginBtn.addEventListener('click', () => {\n    chrome.runtime.sendMessage({ action: 'login' }, (response) => {\n      if (response.error) {\n        alert('Login failed: ' + response.error);\n      } else if (response.success) {\n        showUserSection(response.data);\n      }\n    });\n  });\n  \n  logoutBtn.addEventListener('click', () => {\n    chrome.runtime.sendMessage({ action: 'logout' }, (response) => {\n      if (response.success) {\n        showLoginSection();\n      }\n    });\n  });\n  \n  function showLoginSection() {\n    loginSection.style.display = 'block';\n    userSection.style.display = 'none';\n  }\n  \n  function showUserSection(user) {\n    loginSection.style.display = 'none';\n    userSection.style.display = 'block';\n    \n    // Parse JWT token to get user info\n    if (user.access_token) {\n      try {\n        const payload = JSON.parse(atob(user.access_token.split('.')[1]));\n        userInfo.innerHTML = `\n          <p><strong>Name:</strong> ${payload.name || 'N/A'}</p>\n          <p><strong>Email:</strong> ${payload.email || 'N/A'}</p>\n        `;\n      } catch (error) {\n        userInfo.innerHTML = '<p>Logged in successfully</p>';\n      }\n    }\n  }\n});\n")),(0,r.kt)("h2",{id:"step-5-load-and-test-the-extension"},"Step 5: Load and Test the Extension"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open Chrome and navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"chrome://extensions/"),"."),(0,r.kt)("li",{parentName:"ol"},"Enable ",(0,r.kt)("strong",{parentName:"li"},"Developer mode")," in the top right corner."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Load unpacked")," and select your extension directory."),(0,r.kt)("li",{parentName:"ol"},"Click on the extension icon in the Chrome toolbar."),(0,r.kt)("li",{parentName:"ol"},"Click the ",(0,r.kt)("strong",{parentName:"li"},"Login with Casdoor")," button to test the authentication flow.")),(0,r.kt)("h2",{id:"step-6-handle-token-storage-and-refresh"},"Step 6: Handle Token Storage and Refresh"),(0,r.kt)("p",null,"To maintain user sessions, you should implement token refresh logic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"async function refreshAccessToken(refreshToken) {\n  const response = await fetch(`${CASDOOR_ENDPOINT}/api/login/oauth/refresh_token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: CLIENT_ID,\n      client_secret: CLIENT_SECRET,\n    }),\n  });\n  \n  return await response.json();\n}\n\n// Check token validity and refresh if needed\nasync function getValidAccessToken() {\n  const { user } = await chrome.storage.local.get('user');\n  \n  if (!user || !user.access_token) {\n    return null;\n  }\n  \n  // Check if token is expired (decode JWT)\n  try {\n    const payload = JSON.parse(atob(user.access_token.split('.')[1]));\n    const expiry = payload.exp * 1000; // Convert to milliseconds\n    \n    if (Date.now() >= expiry) {\n      // Token expired, refresh it\n      if (user.refresh_token) {\n        const newTokens = await refreshAccessToken(user.refresh_token);\n        await chrome.storage.local.set({ user: newTokens });\n        return newTokens.access_token;\n      }\n      return null;\n    }\n    \n    return user.access_token;\n  } catch (error) {\n    console.error('Error checking token validity:', error);\n    return null;\n  }\n}\n")),(0,r.kt)("h2",{id:"whats-more"},"What's More"),(0,r.kt)("p",null,"You can explore the following projects/docs to learn more about integrating Casdoor with Chrome extensions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/casdoor/casdoor-chrome-extension"},"casdoor-chrome-extension")," - Official example repository"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/how-to-connect/oauth"},"Casdoor OAuth Documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.chrome.com/docs/extensions/reference/identity/"},"Chrome Extension Identity API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/how-to-connect/sdk"},"Casdoor JavaScript SDK"))))}u.isMDXComponent=!0}}]);