"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[1003],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return t?a.createElement(k,o(o({ref:n},c),{},{components:t})):a.createElement(k,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},27628:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const i={title:"\uacf5\uac1c\ub41c Casbin API\ub4e4",description:"\uacf5\uac1c\ub41c Casbin API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc870\uc9c1 \ub0b4\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc811\uadfc \uad8c\ud55c \uad00\ub9ac",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},o=void 0,l={unversionedId:"permission/exposed-casbin-apis",id:"permission/exposed-casbin-apis",title:"\uacf5\uac1c\ub41c Casbin API\ub4e4",description:"\uacf5\uac1c\ub41c Casbin API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc870\uc9c1 \ub0b4\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc811\uadfc \uad8c\ud55c \uad00\ub9ac",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/permission/exposed-casbin-apis.md",sourceDirName:"permission",slug:"/permission/exposed-casbin-apis",permalink:"/ko/docs/permission/exposed-casbin-apis",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/permission/exposed-casbin-apis.md",tags:[],version:"current",frontMatter:{title:"\uacf5\uac1c\ub41c Casbin API\ub4e4",description:"\uacf5\uac1c\ub41c Casbin API\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc870\uc9c1 \ub0b4\uc5d0\uc11c \uc0ac\uc6a9\uc790 \uc811\uadfc \uad8c\ud55c \uad00\ub9ac",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},sidebar:"tutorialSidebar",previous:{title:"\uad8c\ud55c \uc124\uc815",permalink:"/ko/docs/permission/permission-configuration"},next:{title:"\uc5b4\ub311\ud130",permalink:"/ko/docs/permission/adapter"}},s={},p=[{value:"\uc18c\uac1c",id:"\uc18c\uac1c",level:2},{value:"\uc9d1\ud589",id:"\uc9d1\ud589",level:3},{value:"BatchEnforce",id:"batchenforce",level:3},{value:"GetAllObjects",id:"getallobjects",level:3},{value:"GetAllActions",id:"getallactions",level:3},{value:"GetAllRoles",id:"getallroles",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\uc18c\uac1c"},"\uc18c\uac1c"),(0,r.kt)("p",null,"\ub2f9\uc2e0\uc758 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud504\ub860\ud2b8\uc5d4\ub4dc\uac00 \ub85c\uadf8\uc778\ud55c \uc0ac\uc6a9\uc790\uc758 ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token"),"\uc744 \uc5bb\uc5c8\ub2e4\uace0 \uac00\uc815\ud574 \ubd05\uc2dc\ub2e4. \uc774\uc81c \uc5b4\ub5a4 \uc811\uadfc\uc5d0 \ub300\ud574 \uc0ac\uc6a9\uc790\ub97c \uc778\uc99d\ud558\ub824\uace0 \ud569\ub2c8\ub2e4. \uc774\ub7ec\ud55c API\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ub2e8\uc21c\ud788 ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token"),"\uc744 HTTP \uc694\uccad \ud5e4\ub354\uc5d0 \ub123\uc744 \uc218\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 Casdoor\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," \ud544\ub4dc\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc811\uadfc \uad8c\ud55c\uc744 \ud655\uc778\ud558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4. Casdoor\uac00 \uc81c\uacf5\ud558\ub294 \ub2e4\ub978 API\uc640 \ub9c8\ucc2c\uac00\uc9c0\ub85c, ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," \ud544\ub4dc\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ud074\ub77c\uc774\uc5b8\ud2b8 id\uc640 secret\uc744 \uc0ac\uc6a9\ud558\uba70, ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7617"},"\uae30\ubcf8 HTTP \uc778\uc99d \uccb4\uacc4"),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>"),"\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uc774\ub7ec\ud55c \uc774\uc720\ub85c, Casbin API\ub294 \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \ubc31\uc5d4\ub4dc \uc11c\ubc84\uc5d0 \uc758\ud574 \ud638\ucd9c\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \uadf8\uac83\uc744 \uc5b4\ub5bb\uac8c \ud558\ub294\uc9c0\uc5d0 \ub300\ud55c \ub2e8\uacc4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uc608\ub97c \ub4e4\uc5b4 \ub370\ubaa8 \uc0ac\uc774\ud2b8\uc758 ",(0,r.kt)("a",{parentName:"p",href:"https://door.casdoor.com/applications/casbin/app-vue-python-example"},"app-vue-python-example")," \uc560\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc0ac\uc6a9\ud558\uba74, \uc778\uc99d \ud5e4\ub354\ub294 \ub2e4\uc74c\uacfc \uac19\uc544\uc57c \ud569\ub2c8\ub2e4: ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Basic 294b09fbc17f95daf2fe dd8982f7046ccba1bbd7851d5c1ece4e52bf039d"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\ud504\ub860\ud2b8\uc5d4\ub4dc\ub294 HTTP \uc694\uccad \ud5e4\ub354\ub97c \ud1b5\ud574 ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token"),"\uc744 \ubc31\uc5d4\ub4dc \uc11c\ubc84\uc5d0 \uc804\ub2ec\ud569\ub2c8\ub2e4."),(0,r.kt)("li",{parentName:"ol"},"\ubc31\uc5d4\ub4dc \uc11c\ubc84\ub294 ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token"),"\uc5d0\uc11c \uc0ac\uc6a9\uc790 id\ub97c \uac80\uc0c9\ud569\ub2c8\ub2e4.")),(0,r.kt)("p",null,"\ubbf8\ub9ac \uc54c\ub824\ub450\uc790\uba74, \uc774\ub7ec\ud55c \uc778\ud130\ud398\uc774\uc2a4\ub4e4\ub3c4 \ud604\uc7ac\ub85c\uc11c\ub294 ",(0,r.kt)("inlineCode",{parentName:"p"},"(sub, obj, act)")," \ubaa8\ub378\uc744 \uc704\ud574 \uc124\uacc4\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ubcf8\ubb38\uc740 \uad8c\ud55c\uc758 Casbin \ubaa8\ub378\uc5d0 \uc758\ud574 \uc815\uc758\ub41c \uc694\uccad \ud615\uc2dd\uc73c\ub85c, \uc77c\ubc18\uc801\uc73c\ub85c \uac01\uac01 ",(0,r.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"obj")," \ubc0f ",(0,r.kt)("inlineCode",{parentName:"p"},"act"),"\ub97c \ub098\ud0c0\ub0c5\ub2c8\ub2e4."),(0,r.kt)("p",null,"\uad8c\ud55c \uc81c\uc5b4\uc758 \uc9d1\ud589\uc744 \uc694\uccad\ud558\ub294 API \uc778\ud130\ud398\uc774\uc2a4 \uc678\uc5d0\ub3c4, Casdoor\ub294 \uc678\ubd80 \uc560\ud50c\ub9ac\ucf00\uc774\uc158\ub4e4\uc774 \uad8c\ud55c \uc815\ucc45 \uc815\ubcf4\ub97c \uc5bb\ub294 \ub370 \ub3c4\uc6c0\uc774 \ub418\ub294 \ub2e4\ub978 \uc778\ud130\ud398\uc774\uc2a4\ub4e4\ub3c4 \uc81c\uacf5\ud558\uba70, \uc774\ub4e4\ub3c4 \uc5ec\uae30\uc5d0 \ub098\uc5f4\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4."),(0,r.kt)("h3",{id:"\uc9d1\ud589"},"\uc9d1\ud589"),(0,r.kt)("p",null,"The Enforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,r.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"resourceId"),": The identity of a resource - enforces against all permissions for this resource"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?permissionId=example-org/example-permission' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?modelId=example-org/example-model' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"resourceId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?resourceId=example-org/example-resource' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        true\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,r.kt)("p",null,"Note: When using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resourceId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple boolean values (one for each permission that was checked), and ",(0,r.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,r.kt)("h3",{id:"batchenforce"},"BatchEnforce"),(0,r.kt)("p",null,"The BatchEnforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,r.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?permissionId=example-org/example-permission\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"], ["example-org/example-user3", "example-resource", "example-action"]]\'\n')),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?modelId=example-org/example-model\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"]]\'\n')),(0,r.kt)("p",null,"\uc751\ub2f5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        [\n            true,\n            true,\n            false\n        ]\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,r.kt)("p",null,"Note: When using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple arrays of boolean values (one array for each permission that was checked), and ",(0,r.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,r.kt)("h3",{id:"getallobjects"},"GetAllObjects"),(0,r.kt)("p",null,"This API retrieves all objects (resources) that a user has access to. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\uc751\ub2f5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "app-built-in",\n        "example-resource"\n    ]\n}\n')),(0,r.kt)("h3",{id:"getallactions"},"GetAllActions"),(0,r.kt)("p",null,"This API retrieves all actions that a user can perform. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\uc751\ub2f5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "read",\n        "write",\n        "admin"\n    ]\n}\n')),(0,r.kt)("h3",{id:"getallroles"},"GetAllRoles"),(0,r.kt)("p",null,"This API retrieves all roles assigned to a user. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\uc751\ub2f5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "role_kcx66l"\n    ]\n}\n')))}u.isMDXComponent=!0}}]);