"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[1003],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},27628:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},s=void 0,i={unversionedId:"permission/exposed-casbin-apis",id:"permission/exposed-casbin-apis",title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/permission/exposed-casbin-apis.md",sourceDirName:"permission",slug:"/permission/exposed-casbin-apis",permalink:"/ko/docs/permission/exposed-casbin-apis",draft:!1,editUrl:"https://crowdin.com/project/casdoor-website/ko",tags:[],version:"current",frontMatter:{title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},sidebar:"tutorialSidebar",previous:{title:"Permission Configuration",permalink:"/ko/docs/permission/permission-configuration"},next:{title:"Adapter",permalink:"/ko/docs/permission/adapter"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Enforce",id:"enforce",level:3},{value:"BatchEnforce",id:"batchenforce",level:3},{value:"GetAllObjects",id:"getallobjects",level:3},{value:"GetAllActions",id:"getallactions",level:3},{value:"GetAllRoles",id:"getallroles",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Let's assume that your application's front-end has obtained the ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," of the logged-in user and now wants to authenticate the user for some access. You cannot simply place the ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," into the HTTP request header to use these APIs because Casdoor uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," field to check the access permission. Like any other APIs provided by Casdoor, the ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," field consists of the application client id and secret, using the ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7617"},"Basic HTTP Authentication Scheme"),". It looks like ",(0,r.kt)("inlineCode",{parentName:"p"},"Basic XXX"),". For this reason, Casbin APIs should be called by the application backend server. Here are the steps on how to do it."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The front-end passes the ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token")," to the backend server through the HTTP request header."),(0,r.kt)("li",{parentName:"ol"},"The backend server retrieves the user id from the ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token"),".")),(0,r.kt)("p",null,"As a note in advance, these interfaces are also designed (for now) for the ",(0,r.kt)("inlineCode",{parentName:"p"},"(sub, obj, act)")," model. The ",(0,r.kt)("inlineCode",{parentName:"p"},"permissionId")," in the URL parameters is the identity of the applied permission policy, which consists of the organization name and the permission policy name (i.e., ",(0,r.kt)("inlineCode",{parentName:"p"},"organization name/permission name"),"). The body is the request format defined by the Casbin model of the permission, usually representing ",(0,r.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"obj")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"act")," respectively."),(0,r.kt)("p",null,"In addition to the API interface for requesting enforcement of permission control, Casdoor also provides other interfaces that help external applications obtain permission policy information, which is also listed here."),(0,r.kt)("h3",{id:"enforce"},"Enforce"),(0,r.kt)("p",null,"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?permissionId=example-org/example-permission' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic client_id_and_secret' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        true\n    ],\n    "data2": null\n}\n')),(0,r.kt)("h3",{id:"batchenforce"},"BatchEnforce"),(0,r.kt)("p",null,"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?permissionId=example-org/example-permission\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic client_id_and_secret\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"], ["example-org/example-user3", "example-resource", "example-action"]]\'\n')),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        [\n            true,\n            true,\n            false\n        ]\n    ],\n    "data2": null\n}\n')),(0,r.kt)("h3",{id:"getallobjects"},"GetAllObjects"),(0,r.kt)("p",null,"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects' \\\n--header 'Authorization: Basic client_id_and_secret'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n    "app-built-in"\n]\n')),(0,r.kt)("h3",{id:"getallactions"},"GetAllActions"),(0,r.kt)("p",null,"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions' \\\n--header 'Authorization: Basic client_id_and_secret'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n    "read",\n    "write",\n    "admin"\n]\n')),(0,r.kt)("h3",{id:"getallroles"},"GetAllRoles"),(0,r.kt)("p",null,"Request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles' \\\n--header 'Authorization: Basic client_id_and_secret'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n    "role_kcx66l"\n]\n')))}u.isMDXComponent=!0}}]);