"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[1387],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=d(n),u=o,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||r;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},79925:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={title:"Vis\xe3o Geral",description:"Usando Casdoor como SAML IdP",keywords:["SAML","IdP"]},i=void 0,s={unversionedId:"how-to-connect/saml/overview",id:"how-to-connect/saml/overview",title:"Vis\xe3o Geral",description:"Usando Casdoor como SAML IdP",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/how-to-connect/saml/overview.md",sourceDirName:"how-to-connect/saml",slug:"/how-to-connect/saml/overview",permalink:"/pt/docs/how-to-connect/saml/overview",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/how-to-connect/saml/overview.md",tags:[],version:"current",frontMatter:{title:"Vis\xe3o Geral",description:"Usando Casdoor como SAML IdP",keywords:["SAML","IdP"]},sidebar:"tutorialSidebar",previous:{title:"SAML",permalink:"/pt/docs/category/saml"},next:{title:"AWS Client VPN",permalink:"/pt/docs/how-to-connect/saml/aws"}},p={},d=[{value:"Configura\xe7\xe3o no SP",id:"configura\xe7\xe3o-no-sp",level:3},{value:"Configura\xe7\xe3o no Casdoor IdP",id:"configura\xe7\xe3o-no-casdoor-idp",level:3},{value:"Perfil do usu\xe1rio",id:"perfil-do-usu\xe1rio",level:3},{value:"Um exemplo",id:"um-exemplo",level:3}],l={toc:d};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Casdoor agora pode ser usado como um SAML IdP. At\xe9 este ponto, o Casdoor suportou as principais funcionalidades do SAML 2.0."),(0,o.kt)("h3",{id:"configura\xe7\xe3o-no-sp"},"Configura\xe7\xe3o no SP"),(0,o.kt)("p",null,"Em geral, o SP requer tr\xeas campos obrigat\xf3rios: ",(0,o.kt)("inlineCode",{parentName:"p"},"Single Sign-On"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Issuer")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"Public Certificate"),". A maioria dos SPs pode obter esses campos fazendo o upload do arquivo de Metadados XML ou da URL de Metadados XML para preenchimento autom\xe1tico."),(0,o.kt)("p",null,"Os metadados do ponto de extremidade SAML no Casdoor s\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"<Endpoint of casdoor>/api/saml/metadata?application=admin/<application name>"),". Suponha que o ponto de extremidade do Casdoor seja ",(0,o.kt)("inlineCode",{parentName:"p"},"https://door.casdoor.com"),", e ele cont\xe9m uma aplica\xe7\xe3o chamada ",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in"),". O ponto de extremidade de Metadados XML ser\xe1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"https://door.casdoor.com/api/saml/metadata?application=admin/app-built-in\n")),(0,o.kt)("p",null,"Voc\xea tamb\xe9m pode encontrar os metadados na p\xe1gina de edi\xe7\xe3o da aplica\xe7\xe3o. Clique no bot\xe3o para copiar a URL e cole-a no navegador para baixar os Metadados XML."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"metadados",src:n(43587).Z,width:"1807",height:"505"})),(0,o.kt)("h3",{id:"configura\xe7\xe3o-no-casdoor-idp"},"Configura\xe7\xe3o no Casdoor IdP"),(0,o.kt)("p",null,"Casdoor suporta tanto GET quanto POST ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse"),". O Casdoor precisa saber quais tipos de solicita\xe7\xf5es o SP suporta quando o Casdoor envia o ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse")," para o SP. Voc\xea precisa configurar a aplica\xe7\xe3o no Casdoor com base no tipo de ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse")," suportado pelo seu SP."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Se voc\xea preencher a ",(0,o.kt)("inlineCode",{parentName:"p"},"URL de Resposta"),", o Casdoor enviar\xe1 o ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse")," por Solicita\xe7\xe3o ",(0,o.kt)("strong",{parentName:"p"},"POST"),". Se a URL de Resposta estiver vazia, o Casdoor usar\xe1 a solicita\xe7\xe3o ",(0,o.kt)("strong",{parentName:"p"},"GET"),". Voc\xea pode se perguntar como o Casdoor sabe a ",(0,o.kt)("inlineCode",{parentName:"p"},"URL de Resposta")," do SP se a ",(0,o.kt)("inlineCode",{parentName:"p"},"URL de Resposta")," estiver vazia. Na verdade, o Casdoor pode obter a URL chamada ",(0,o.kt)("inlineCode",{parentName:"p"},"AssertionConsumerServiceURL")," analisando o ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLRequest")," e enviar a solicita\xe7\xe3o com ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse")," para ",(0,o.kt)("inlineCode",{parentName:"p"},"AssertionConsumerServiceURL"),". A ",(0,o.kt)("inlineCode",{parentName:"p"},"URL de Resposta")," substituir\xe1 a ",(0,o.kt)("inlineCode",{parentName:"p"},"AssertionConsumerServiceURL")," no ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLRequest"),".")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"URL de Resposta"),": Digite a URL do ACS que verifica a resposta SAML."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"URL de Resposta",src:n(73524).Z,width:"727",height:"251"}))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"URL de Redirecionamento"),": Digite um nome \xfanico. Isto pode ser chamado de ",(0,o.kt)("inlineCode",{parentName:"p"},"Audience")," ou ",(0,o.kt)("inlineCode",{parentName:"p"},"Entity ID")," no seu SP. Certifique-se de preencher a mesma ",(0,o.kt)("inlineCode",{parentName:"p"},"URL de Redirecionamento")," aqui como no seu SP."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"Entity ID",src:n(21605).Z,width:"743",height:"229"})))),(0,o.kt)("h3",{id:"perfil-do-usu\xe1rio"},"Perfil do usu\xe1rio"),(0,o.kt)("p",null,"Ap\xf3s o login bem-sucedido, o perfil do usu\xe1rio na ",(0,o.kt)("inlineCode",{parentName:"p"},"SAMLResponse")," retornada do Casdoor tem tr\xeas campos. Os atributos no XML e os atributos do usu\xe1rio no Casdoor s\xe3o mapeados da seguinte forma:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"Nome do Atributo XML"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Campo do usu\xe1rio"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Email"),(0,o.kt)("td",{parentName:"tr",align:"center"},"email")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"DisplayName"),(0,o.kt)("td",{parentName:"tr",align:"center"},"displayName")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"Nome"),(0,o.kt)("td",{parentName:"tr",align:"center"},"name")))),(0,o.kt)("p",null,"Veja ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SAML_2.0"},"https://en.wikipedia.org/wiki/SAML_2.0")," para mais informa\xe7\xf5es sobre SAML e suas diferentes vers\xf5es."),(0,o.kt)("h3",{id:"um-exemplo"},"Um exemplo"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/russellhaering/gosaml2"},"gosaml2")," \xe9 uma implementa\xe7\xe3o do SAML 2.0 para Provedores de Servi\xe7o baseada em etree e goxmldsig, uma implementa\xe7\xe3o pura em Go de assinaturas digitais XML. Usamos esta biblioteca para testar o SAML 2.0 no Casdoor como mostrado abaixo."),(0,o.kt)("p",null,"Suponha que voc\xea possa acessar o Casdoor atrav\xe9s de ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:7001/"),", e seu Casdoor cont\xe9m uma aplica\xe7\xe3o chamada ",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in"),", que pertence a uma organiza\xe7\xe3o chamada ",(0,o.kt)("inlineCode",{parentName:"p"},"built-in"),". As URLs, ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/acs/example")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/saml/acs/example"),", devem ser adicionadas \xe0s URLs de Redirecionamento em ",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "crypto/x509"\n    "fmt"\n    "net/http"\n\n    "io/ioutil"\n\n    "encoding/base64"\n    "encoding/xml"\n\n    saml2 "github.com/russellhaering/gosaml2"\n    "github.com/russellhaering/gosaml2/types"\n    dsig "github.com/russellhaering/goxmldsig"\n)\n\nfunc main() {\n    res, err := http.Get("http://localhost:7001/api/saml/metadata?application=admin/app-built-in")\n    if err != nil {\n        panic(err)\n    }\n\n    rawMetadata, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        panic(err)\n    }\n\n    metadata := &types.EntityDescriptor{}\n    err = xml.Unmarshal(rawMetadata, metadata)\n    if err != nil {\n        panic(err)\n    }\n\n    certStore := dsig.MemoryX509CertificateStore{\n        Roots: []*x509.Certificate{},\n    }\n\n    for _, kd := range metadata.IDPSSODescriptor.KeyDescriptors {\n        for idx, xcert := range kd.KeyInfo.X509Data.X509Certificates {\n            if xcert.Data == "" {\n                panic(fmt.Errorf("metadata certificate(%d) must not be empty", idx))\n            }\n            certData, err := base64.StdEncoding.DecodeString(xcert.Data)\n            if err != nil {\n                panic(err)\n            }\n\n            idpCert, err := x509.ParseCertificate(certData)\n            if err != nil {\n                panic(err)\n            }\n\n            certStore.Roots = append(certStore.Roots, idpCert)\n        }\n    }\n\n    randomKeyStore := dsig.RandomKeyStoreForTest()\n\n    sp := &saml2.SAMLServiceProvider{\n        IdentityProviderSSOURL:      metadata.IDPSSODescriptor.SingleSignOnServices[0].Location,\n        IdentityProviderIssuer:      metadata.EntityID,\n        ServiceProviderIssuer:       "http://localhost:6900/acs/example",\n        AssertionConsumerServiceURL: "http://localhost:6900/v1/_saml_callback",\n        SignAuthnRequests:           true,\n        AudienceURI:                 "http://localhost:6900/saml/acs/example",\n        IDPCertificateStore:         &certStore,\n        SPKeyStore:                  randomKeyStore,\n    }\n\n    http.HandleFunc("/v1/_saml_callback", func(rw http.ResponseWriter, req *http.Request) {\n        err := req.ParseForm()\n        if err != nil {\n            rw.WriteHeader(http.StatusBadRequest)\n            return\n        }\n        samlReponse := req.URL.Query().Get("SAMLResponse")\n        assertionInfo, err := sp.RetrieveAssertionInfo(samlReponse)\n        if err != nil {\n            fmt.Println(err)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n        fmt.Println(assertionInfo)\n        if assertionInfo.WarningInfo.InvalidTime {\n            fmt.Println("here12:", assertionInfo.WarningInfo.InvalidTime)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        if assertionInfo.WarningInfo.NotInAudience {\n            fmt.Println(assertionInfo)\n            fmt.Println("here13:", assertionInfo.WarningInfo.NotInAudience)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        fmt.Fprintf(rw, "NameID: %s\\n", assertionInfo.NameID)\n\n        fmt.Fprintf(rw, "Assertions:\\n")\n\n        for key, val := range assertionInfo.Values {\n            fmt.Fprintf(rw, "  %s: %+v\\n", key, val)\n        }\n        fmt.Println(assertionInfo.Values.Get("FirstName"))\n        fmt.Fprintf(rw, "\\n")\n\n        fmt.Fprintf(rw, "Warnings:\\n")\n        fmt.Fprintf(rw, "%+v\\n", assertionInfo.WarningInfo)\n    })\n\n    println("Visit this URL To Authenticate:")\n    authURL, err := sp.BuildAuthURL("")\n    if err != nil {\n        panic(err)\n    }\n\n    println(authURL)\n\n    println("Supply:")\n    fmt.Printf("  SP ACS URL      : %s\\n", sp.AssertionConsumerServiceURL)\n\n    err = http.ListenAndServe(":6900", nil)\n    if err != nil {\n        panic(err)\n    }\n}\n')),(0,o.kt)("p",null,"Execute o c\xf3digo acima, e o console exibir\xe1 a seguinte mensagem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"Visit this URL To Authenticate:\nhttp://localhost:7001/login/saml/authorize/admin/app-built-in?SAMLRequest=lFVbk6K8Fv0rFvNo2QR...\nSupply:\n  SP ACS URL      : http://localhost:6900/v1/_saml_callback\n")),(0,o.kt)("p",null,"Clique na URL para autenticar, e a p\xe1gina de login do Casdoor ser\xe1 exibida."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"login",src:n(80683).Z,width:"2560",height:"1462"})),(0,o.kt)("p",null,"Ap\xf3s autenticar, voc\xea receber\xe1 as mensagens de resposta como mostrado abaixo."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"resposta",src:n(94139).Z,width:"2560",height:"375"})))}m.isMDXComponent=!0},21605:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/saml_entityId-02cf13e2debc60f1c7babe47bb443cbf.png"},80683:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/saml_login-bf1964a645b97ac59818a2d352a733aa.png"},43587:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/saml_metadata-0511209f4c6ccd88259d4438388eadae.png"},73524:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/saml_replyURL-54e1796b344daaab144af1999228412e.png"},94139:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/saml_response-b3ad831adea4c2d5b78f6ffa5e410ab6.png"}}]);