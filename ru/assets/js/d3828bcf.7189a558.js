"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[2220],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(f,s(s({ref:n},p),{},{components:t})):o.createElement(f,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},65018:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var o=t(83117),r=t(80102),a=(t(67294),t(3905)),s=["components"],i={title:"k8s",description:"Deploy Casdoor in k8s",keywords:["k8s","kubernetes"]},c=void 0,l={unversionedId:"deploy/k8s",id:"deploy/k8s",title:"k8s",description:"Deploy Casdoor in k8s",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/deploy/k8s.md",sourceDirName:"deploy",slug:"/deploy/k8s",permalink:"/ru/docs/deploy/k8s",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/tree/master/docs/deploy/k8s.md",tags:[],version:"current",frontMatter:{title:"k8s",description:"Deploy Casdoor in k8s",keywords:["k8s","kubernetes"]},sidebar:"tutorialSidebar",previous:{title:"Nginx",permalink:"/ru/docs/deploy/nginx"},next:{title:"Overview",permalink:"/ru/docs/ldap/overview"}},p={},u=[{value:"Deploy Casdoor in k8s",id:"deploy-casdoor-in-k8s",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"deploy-casdoor-in-k8s"},"Deploy Casdoor in k8s"),(0,a.kt)("p",null,'We have given out a basic example of deploying Casdoor into k8s. In the root folder of casdoor, there exist a file named "k8s.yaml", which include a example minimum configuration to be used in deploying casdoor in k8s, a deployment and a service.'),(0,a.kt)("p",null,"First, make sure that you have modified the conf/app.conf so that the casdoor can successfully connect to the database, and the database is running. Second, make sure k8s is able to pull the necessary images."),(0,a.kt)("p",null,"Run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s.yaml\n")),(0,a.kt)("p",null,"And soon you can see the result via command ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl get pods")),(0,a.kt)("p",null,"The content of k8s.yaml is as follow"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# this is only an EXAMPLE of deploying casddor in kubernetes\n# please modify this file according to your requirements\napiVersion: v1\nkind: Service\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-svc\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this filed\n  type: NodePort\n  ports:\n    - port: 8000\n  selector:\n    app: casdoor\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-deployment\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't use redis, casdoor should not have multiple replicas\n  replicas: 1\n  selector:\n    matchLabels:\n      app: casdoor\n  template:\n    metadata:\n      labels:\n        app: casdoor\n    spec:\n      containers:\n        - name: casdoor-container\n          image: casbin/casdoor:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8000\n          volumeMounts:\n            # the mounted directory path in THE CONTAINER\n            - mountPath: /conf\n              name: conf\n          env:       \n            - name: RUNNING_IN_DOCKER\n              value: \"true\"\n      #if you want to deploy this in real prod env, consider the config map\n      volumes:\n        - name: conf\n          hostPath:\n            #EDIT IT: the mounted directory path in THE HOST\n            path: /conf\n\n")),(0,a.kt)("p",null,"This file is merely an example. For example, you can choose to use a namespace other than default, use a service type instead of nodeport to expose the casdoor, or use a use config map in k8s to mount the configuration file, which is a more recommended way in k8s."))}m.isMDXComponent=!0}}]);