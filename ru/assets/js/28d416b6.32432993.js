"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[9757],{9969:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));n(1839);const r={title:"Electron App",description:"An Electron app example for Casdoor",keywords:["electron","sdk"]},l=void 0,i={unversionedId:"how-to-connect/desktop-sdks/electron-app",id:"how-to-connect/desktop-sdks/electron-app",title:"Electron App",description:"An Electron app example for Casdoor",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/how-to-connect/desktop-sdks/electron-app.md",sourceDirName:"how-to-connect/desktop-sdks",slug:"/how-to-connect/desktop-sdks/electron-app",permalink:"/ru/docs/how-to-connect/desktop-sdks/electron-app",draft:!1,editUrl:"https://crowdin.com/project/casdoor-website/ru",tags:[],version:"current",frontMatter:{title:"Electron App",description:"An Electron app example for Casdoor",keywords:["electron","sdk"]},sidebar:"tutorialSidebar",previous:{title:"Vue SDK",permalink:"/ru/docs/how-to-connect/vue-sdk"},next:{title:"Dotnet Desktop App",permalink:"/ru/docs/how-to-connect/desktop-sdks/dotnet-app"}},p={},s=[{value:"Initialization",id:"initialization",level:2},{value:"Available commands",id:"available-commands",level:2},{value:"<code>npm run dev</code> or <code>yarn dev</code>",id:"npm-run-dev-or-yarn-dev",level:3},{value:"<code>npm run make</code> or <code>yarn make</code>",id:"npm-run-make-or-yarn-make",level:3},{value:"Prview",id:"prview",level:2},{value:"Set the custom protocol",id:"set-the-custom-protocol",level:2},{value:"Open the login url by the browser",id:"open-the-login-url-by-the-browser",level:2},{value:"Listen to the open application event",id:"listen-to-the-open-application-event",level:2},{value:"Parse the code and get the user info",id:"parse-the-code-and-get-the-user-info",level:2}],c={toc:s};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/casdoor/casdoor-electron-example"},"Electron app example")," for Casdoor."),(0,a.kt)("h1",{id:"how-to-run-example"},"How to run example"),(0,a.kt)("h2",{id:"initialization"},"Initialization"),(0,a.kt)("p",null,"You need to initialize 6 parameters, which are all string type:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Path"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"serverUrl"),(0,a.kt)("td",{parentName:"tr",align:null},"your Casdoor server URL"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"clientId"),(0,a.kt)("td",{parentName:"tr",align:null},"the Client ID of your Casdoor application"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"appName"),(0,a.kt)("td",{parentName:"tr",align:null},"the name of your Casdoor application"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"redirectPath"),(0,a.kt)("td",{parentName:"tr",align:null},"the path of the redirect URL for your Casdoor application, will be ",(0,a.kt)("inlineCode",{parentName:"td"},"/callback")," if not provided"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"clientSecret"),(0,a.kt)("td",{parentName:"tr",align:null},"the Client Secret\xa0of your Casdoor application"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"casdoorServiceDomain"),(0,a.kt)("td",{parentName:"tr",align:null},"your Casdoor server URL"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"public/electron.js"))))),(0,a.kt)("p",null,"If you don't set these parameters, this project will use the ",(0,a.kt)("a",{parentName:"p",href:"https://door.casdoor.com/"},"Casdoor online demo")," as the defult Casdoor server and use the ",(0,a.kt)("a",{parentName:"p",href:"https://door.casdoor.com/applications/app-casnode"},"Casnode")," as the default Casdoor application."),(0,a.kt)("h2",{id:"available-commands"},"Available commands"),(0,a.kt)("p",null,"In the project directory, you can run:"),(0,a.kt)("h3",{id:"npm-run-dev-or-yarn-dev"},(0,a.kt)("inlineCode",{parentName:"h3"},"npm run dev")," or ",(0,a.kt)("inlineCode",{parentName:"h3"},"yarn dev")),(0,a.kt)("p",null,"Builds the electron app and run this app."),(0,a.kt)("h3",{id:"npm-run-make-or-yarn-make"},(0,a.kt)("inlineCode",{parentName:"h3"},"npm run make")," or ",(0,a.kt)("inlineCode",{parentName:"h3"},"yarn make")),(0,a.kt)("p",null,"Package and distribute your application. It will create the ",(0,a.kt)("inlineCode",{parentName:"p"},"out")," folder where your package will be located:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// Example for macOS out/  \n\u251c\u2500\u2500 out/make/zip/darwin/x64/casdoor-electron-example-darwin-x64-1.0.0.zip  \n\u251c\u2500\u2500 ...  \n\u2514\u2500\u2500 out/casdoor-electron-example-darwin-x64/casdoor-electron-example.app/Contents/MacOS/casdoor-electron-example\n")),(0,a.kt)("h2",{id:"prview"},"Prview"),(0,a.kt)("p",null,"After you run this electron application, a new window will be showed on your desktop. ",(0,a.kt)("img",{alt:"electron login",src:n(5529).Z,width:"1614",height:"1210"})," If you click ",(0,a.kt)("inlineCode",{parentName:"p"},"Login with Casdoor")," botton, your default browser will be opened automatically and show the login page. ",(0,a.kt)("img",{alt:"browser",src:n(3930).Z,width:"3834",height:"1888"})," After you login successfully, your electron application will be opened and your user name will be showed on your application. ",(0,a.kt)("img",{alt:"electron logout",src:n(6951).Z,width:"1604",height:"1206"})," You can preview the whole process by the gif image below. ",(0,a.kt)("img",{alt:"electron gif",src:n(6194).Z,width:"2872",height:"1800"})),(0,a.kt)("h1",{id:"how-to-integrate"},"How to integrate"),(0,a.kt)("h2",{id:"set-the-custom-protocol"},"Set the custom protocol"),(0,a.kt)("p",null,"Firstly, you need to set the custom protocol called ",(0,a.kt)("inlineCode",{parentName:"p"},"casdoor"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const protocol = "casdoor";\n\nif (process.defaultApp) {\n  if (process.argv.length >= 2) {\n    app.setAsDefaultProtocolClient(protocol, process.execPath, [\n      path.resolve(process.argv[1]),\n    ]);\n  }\n} else {\n  app.setAsDefaultProtocolClient(protocol);\n}\n')),(0,a.kt)("p",null,"This will help the browser to open your electron application and send the login info to the electron application."),(0,a.kt)("h2",{id:"open-the-login-url-by-the-browser"},"Open the login url by the browser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const serverUrl = "https://door.casdoor.com";\nconst appName = "app-casnode";\nconst redirectPath = "/callback";\nconst clientId = "014ae4bd048734ca2dea";\nconst clientSecret = "f26a4115725867b7bb7b668c81e1f8f7fae1544d";\n\nconst redirectUrl = "casdoor://localhost:3000" + redirectPath;\n\nconst signinUrl = `${serverUrl}/login/oauth/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUrl)}&scope=profile&state=${appName}&noRedirect=true`;\n\nshell.openExternal(signinUrl); //Open the login url by the browser\n')),(0,a.kt)("p",null,"You can change the first 5 parameters."),(0,a.kt)("h2",{id:"listen-to-the-open-application-event"},"Listen to the open application event"),(0,a.kt)("p",null,"After you login successfully in the browser, the browser will open your electron application. You need to listen to the open application event."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const gotTheLock = app.requestSingleInstanceLock();\nconst ProtocolRegExp = new RegExp(`^${protocol}://`);\n\nif (!gotTheLock) {\n  app.quit();\n} else {\n  app.on("second-instance", (event, commandLine, workingDirectory) => {\n    if (mainWindow) {\n      if (mainWindow.isMinimized()) mainWindow.restore();\n      mainWindow.focus();\n      commandLine.forEach((str) => {\n        if (ProtocolRegExp.test(str)) {\n          const params = url.parse(str, true).query;\n          if (params && params.code) {\n            store.set("casdoor_code", params.code);\n            mainWindow.webContents.send("receiveCode", params.code);\n          }\n        }\n      });\n    }\n  });\n  app.whenReady().then(createWindow);\n\n  app.on("open-url", (event, openUrl) => {\n    const isProtocol = ProtocolRegExp.test(openUrl);\n    if (isProtocol) {\n      const params = url.parse(openUrl, true).query;\n      if (params && params.code) {\n        store.set("casdoor_code", params.code);\n        mainWindow.webContents.send("receiveCode", params.code);\n      }\n    }\n  });\n}\n')),(0,a.kt)("p",null,"You can get the code from the broswer, which is ",(0,a.kt)("inlineCode",{parentName:"p"},"casdoor_code")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"params.code"),"."),(0,a.kt)("h2",{id:"parse-the-code-and-get-the-user-info"},"Parse the code and get the user info"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'async function getUserInfo(clientId, clientSecret, code) {\n  const { data } = await axios({\n    method: "post",\n    url: authCodeUrl,\n    headers: {\n      "content-type": "application/json",\n    },\n    data: JSON.stringify({\n      grant_type: "authorization_code",\n      client_id: clientId,\n      client_secret: clientSecret,\n      code: code,\n    }),\n  });\n  const resp = await axios({\n    method: "get",\n    url: `${getUserInfoUrl}?accessToken=${data.access_token}`,\n  });\n  return resp.data;\n}\n\nipcMain.handle("getUserInfo", async (event, clientId, clientSecret) => {\n  const code = store.get("casdoor_code");\n  const userInfo = await getUserInfo(clientId, clientSecret, code);\n  store.set("userInfo", userInfo);\n  return userInfo;\n});\n')),(0,a.kt)("p",null,"Finally, you can parse the code and get the user info just followed the ",(0,a.kt)("a",{parentName:"p",href:"/docs/how-to-connect/oauth"},"OAuth docs page"),"."))}d.isMDXComponent=!0},6194:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/howto-desktop-electron-app-preview-7cb64e6ccdec9838ba77e9e85cf97985.gif"},3930:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/howto-desktop-electron-browser-604defe3a2abf42147ead02ed9b32d5d.png"},5529:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/howto-desktop-electron-login-1d46dd2e398ebe52379c87012d532d03.png"},6951:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/howto-desktop-electron-logout-11692c9485daae428f959dae337c97f8.png"}}]);