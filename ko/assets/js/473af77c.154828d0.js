(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[6743],{31401:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(74034),a=t(79973),i=(t(67294),t(3905)),o=["components"],s={title:"SAML"},l=void 0,c={unversionedId:"how-to-connect/saml",id:"how-to-connect/saml",isDocsHomePage:!1,title:"SAML",description:"Using Casdoor as SAML IdP",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/how-to-connect/saml.md",sourceDirName:"how-to-connect",slug:"/how-to-connect/saml",permalink:"/ko/docs/how-to-connect/saml",editUrl:"https://github.com/casdoor/casdoor-website/tree/master/docs/how-to-connect/saml.md",tags:[],version:"current",frontMatter:{title:"SAML"},sidebar:"tutorialSidebar",previous:{title:"CAS",permalink:"/ko/docs/how-to-connect/cas"},next:{title:"Frontend",permalink:"/ko/docs/developer-guide/frontend"}},p=[{value:"Using Casdoor as SAML IdP",id:"using-casdoor-as-saml-idp",children:[{value:"Overview",id:"overview",children:[],level:3},{value:"An example",id:"an-example",children:[],level:3}],level:2}],d={toc:p};function u(e){var n=e.components,s=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"using-casdoor-as-saml-idp"},"Using Casdoor as SAML IdP"),(0,i.kt)("p",null,"Casdoor now can be used as SAML IdP. Up to now the Casdoor have supported the main feature of SAML 2.0 ."),(0,i.kt)("h3",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The metadata of SAML endpoint in Casdoor is ",(0,i.kt)("inlineCode",{parentName:"p"},"<Endpoint of casdoor>/api/saml/metadata?application=<organization name>/<application name>"),". And you can also find the metadata in the application edit page."),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(63982).Z})),(0,i.kt)("p",null,"Suppose the endpoint of Casdoor is ",(0,i.kt)("inlineCode",{parentName:"p"},"https://door.casdoor.com"),", which contains an application called ",(0,i.kt)("inlineCode",{parentName:"p"},"app-built-in")," which belongs to an organization called ",(0,i.kt)("inlineCode",{parentName:"p"},"built-in"),"."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SAML_2.0"},"https://en.wikipedia.org/wiki/SAML_2.0")," for more information about SAML and its different versions."),(0,i.kt)("h3",{id:"an-example"},"An example"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/russellhaering/gosaml2"},"gosaml2")," is a SAML 2.0 implemementation for Service Providers based on etree and goxmldsig, a pure Go implementation of XML digital signatures. And we use this library to test the SAML 2.0 in Casdoor as below."),(0,i.kt)("p",null,"Suppose you can access Casdoor through ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:7001/"),", and your Casdoor contains an application called ",(0,i.kt)("inlineCode",{parentName:"p"},"app-built-in")," which belongs to an organization called ",(0,i.kt)("inlineCode",{parentName:"p"},"built-in"),". The URLs, ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/acs/example")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/saml/acs/example"),", should be added to the Redirect URLs in ",(0,i.kt)("inlineCode",{parentName:"p"},"app-built-in"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "crypto/x509"\n    "fmt"\n    "net/http"\n\n    "io/ioutil"\n\n    "encoding/base64"\n    "encoding/xml"\n\n    saml2 "github.com/russellhaering/gosaml2"\n    "github.com/russellhaering/gosaml2/types"\n    dsig "github.com/russellhaering/goxmldsig"\n)\n\nfunc main() {\n    res, err := http.Get("http://localhost:7001/api/saml/metadata?application=admin/app-built-in")\n    if err != nil {\n        panic(err)\n    }\n\n    rawMetadata, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        panic(err)\n    }\n\n    metadata := &types.EntityDescriptor{}\n    err = xml.Unmarshal(rawMetadata, metadata)\n    if err != nil {\n        panic(err)\n    }\n\n    certStore := dsig.MemoryX509CertificateStore{\n        Roots: []*x509.Certificate{},\n    }\n\n    for _, kd := range metadata.IDPSSODescriptor.KeyDescriptors {\n        for idx, xcert := range kd.KeyInfo.X509Data.X509Certificates {\n            if xcert.Data == "" {\n                panic(fmt.Errorf("metadata certificate(%d) must not be empty", idx))\n            }\n            certData, err := base64.StdEncoding.DecodeString(xcert.Data)\n            if err != nil {\n                panic(err)\n            }\n\n            idpCert, err := x509.ParseCertificate(certData)\n            if err != nil {\n                panic(err)\n            }\n\n            certStore.Roots = append(certStore.Roots, idpCert)\n        }\n    }\n\n    randomKeyStore := dsig.RandomKeyStoreForTest()\n\n    sp := &saml2.SAMLServiceProvider{\n        IdentityProviderSSOURL:      metadata.IDPSSODescriptor.SingleSignOnServices[0].Location,\n        IdentityProviderIssuer:      metadata.EntityID,\n        ServiceProviderIssuer:       "http://localhost:6900/acs/example",\n        AssertionConsumerServiceURL: "http://localhost:6900/v1/_saml_callback",\n        SignAuthnRequests:           true,\n        AudienceURI:                 "http://localhost:6900/saml/acs/example",\n        IDPCertificateStore:         &certStore,\n        SPKeyStore:                  randomKeyStore,\n    }\n\n    http.HandleFunc("/v1/_saml_callback", func(rw http.ResponseWriter, req *http.Request) {\n        err := req.ParseForm()\n        if err != nil {\n            rw.WriteHeader(http.StatusBadRequest)\n            return\n        }\n        samlReponse := req.URL.Query().Get("SAMLResponse")\n        assertionInfo, err := sp.RetrieveAssertionInfo(samlReponse)\n        if err != nil {\n            fmt.Println(err)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n        fmt.Println(assertionInfo)\n        if assertionInfo.WarningInfo.InvalidTime {\n            fmt.Println("here12:", assertionInfo.WarningInfo.InvalidTime)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        if assertionInfo.WarningInfo.NotInAudience {\n            fmt.Println(assertionInfo)\n            fmt.Println("here13:", assertionInfo.WarningInfo.NotInAudience)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        fmt.Fprintf(rw, "NameID: %s\\n", assertionInfo.NameID)\n\n        fmt.Fprintf(rw, "Assertions:\\n")\n\n        for key, val := range assertionInfo.Values {\n            fmt.Fprintf(rw, "  %s: %+v\\n", key, val)\n        }\n        fmt.Println(assertionInfo.Values.Get("FirstName"))\n        fmt.Fprintf(rw, "\\n")\n\n        fmt.Fprintf(rw, "Warnings:\\n")\n        fmt.Fprintf(rw, "%+v\\n", assertionInfo.WarningInfo)\n    })\n\n    println("Visit this URL To Authenticate:")\n    authURL, err := sp.BuildAuthURL("")\n    if err != nil {\n        panic(err)\n    }\n\n    println(authURL)\n\n    println("Supply:")\n    fmt.Printf("  SP ACS URL      : %s\\n", sp.AssertionConsumerServiceURL)\n\n    err = http.ListenAndServe(":6900", nil)\n    if err != nil {\n        panic(err)\n    }\n}\n')),(0,i.kt)("p",null,"Run the above codes and the console will display the following message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Visit this URL To Authenticate:\nhttp://localhost:7001/login/saml/authorize/admin/app-built-in?SAMLRequest=lFVbk6K8Fv0rFvNo2QR...\nSupply:\n  SP ACS URL      : http://localhost:6900/v1/_saml_callback\n")),(0,i.kt)("p",null,"Click the URL to authenticate, the login page of Casdoor will display."),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(54981).Z})),(0,i.kt)("p",null,"You will get the response messages as below after authenticating."),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(21821).Z})))}u.isMDXComponent=!0},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(f,o(o({ref:n},p),{},{components:t})):r.createElement(f,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},54981:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_login-bf1964a645b97ac59818a2d352a733aa.png"},63982:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_metadata-c86efd52682487703ca160f25717ed40.png"},21821:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_response-b3ad831adea4c2d5b78f6ffa5e410ab6.png"}}]);