"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[4966],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},20945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const r={title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},i=void 0,l={unversionedId:"permission/exposed-casbin-apis",id:"permission/exposed-casbin-apis",title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",source:"@site/docs/permission/exposed-casbin-apis.md",sourceDirName:"permission",slug:"/permission/exposed-casbin-apis",permalink:"/docs/permission/exposed-casbin-apis",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/permission/exposed-casbin-apis.md",tags:[],version:"current",frontMatter:{title:"Exposed Casbin APIs",description:"Using exposed Casbin APIs to manage user access rights in organizations",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},sidebar:"tutorialSidebar",previous:{title:"Permission Configuration",permalink:"/docs/permission/permission-configuration"},next:{title:"Adapter",permalink:"/docs/permission/adapter"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Enforce",id:"enforce",level:3},{value:"BatchEnforce",id:"batchenforce",level:3},{value:"GetAllObjects",id:"getallobjects",level:3},{value:"GetAllActions",id:"getallactions",level:3},{value:"GetAllRoles",id:"getallroles",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Let's assume that your application's front-end has obtained the ",(0,o.kt)("inlineCode",{parentName:"p"},"access_token")," of the logged-in user and now wants to authenticate the user for some access. You cannot simply place the ",(0,o.kt)("inlineCode",{parentName:"p"},"access_token")," into the HTTP request header to use these APIs because Casdoor uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization")," field to check the access permission. Like any other APIs provided by Casdoor, the ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization")," field consists of the application client id and secret, using the ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7617"},"Basic HTTP Authentication Scheme"),".\nIt looks like ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>"),". For this reason, Casbin APIs should be called by the application backend server. Here are the steps on how to do it."),(0,o.kt)("p",null,"Take the ",(0,o.kt)("a",{parentName:"p",href:"https://door.casdoor.com/applications/casbin/app-vue-python-example"},"app-vue-python-example")," application in the demo site for example, the authorization header should be: ",(0,o.kt)("inlineCode",{parentName:"p"},"Authorization: Basic 294b09fbc17f95daf2fe dd8982f7046ccba1bbd7851d5c1ece4e52bf039d"),"."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The front-end passes the ",(0,o.kt)("inlineCode",{parentName:"li"},"access_token")," to the backend server through the HTTP request header."),(0,o.kt)("li",{parentName:"ol"},"The backend server retrieves the user id from the ",(0,o.kt)("inlineCode",{parentName:"li"},"access_token"),".")),(0,o.kt)("p",null,"As a note in advance, these interfaces are also designed (for now) for the ",(0,o.kt)("inlineCode",{parentName:"p"},"(sub, obj, act)")," model. The body is the request format defined by the Casbin model of the permission, usually representing ",(0,o.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"obj")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"act")," respectively."),(0,o.kt)("p",null,"In addition to the API interface for requesting enforcement of permission control, Casdoor also provides other interfaces that help external applications obtain permission policy information, which is also listed here."),(0,o.kt)("h3",{id:"enforce"},"Enforce"),(0,o.kt)("p",null,"The Enforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,o.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,o.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,o.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resourceId"),": The identity of a resource - enforces against all permissions for this resource"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,o.kt)("p",null,"Request using ",(0,o.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?permissionId=example-org/example-permission' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,o.kt)("p",null,"Request using ",(0,o.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?modelId=example-org/example-model' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,o.kt)("p",null,"Request using ",(0,o.kt)("inlineCode",{parentName:"p"},"resourceId"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?resourceId=example-org/example-resource' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        true\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,o.kt)("p",null,"Note: When using ",(0,o.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"resourceId"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple boolean values (one for each permission that was checked), and ",(0,o.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,o.kt)("h3",{id:"batchenforce"},"BatchEnforce"),(0,o.kt)("p",null,"The BatchEnforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,o.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,o.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,o.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,o.kt)("p",null,"Request using ",(0,o.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?permissionId=example-org/example-permission\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"], ["example-org/example-user3", "example-resource", "example-action"]]\'\n')),(0,o.kt)("p",null,"Request using ",(0,o.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?modelId=example-org/example-model\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"]]\'\n')),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        [\n            true,\n            true,\n            false\n        ]\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,o.kt)("p",null,"Note: When using ",(0,o.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple arrays of boolean values (one array for each permission that was checked), and ",(0,o.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,o.kt)("h3",{id:"getallobjects"},"GetAllObjects"),(0,o.kt)("p",null,"This API retrieves all objects (resources) that a user has access to. It accepts an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,o.kt)("p",null,"Request with ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Request using session (userId determined from session):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "app-built-in",\n        "example-resource"\n    ]\n}\n')),(0,o.kt)("h3",{id:"getallactions"},"GetAllActions"),(0,o.kt)("p",null,"This API retrieves all actions that a user can perform. It accepts an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,o.kt)("p",null,"Request with ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Request using session (userId determined from session):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "read",\n        "write",\n        "admin"\n    ]\n}\n')),(0,o.kt)("h3",{id:"getallroles"},"GetAllRoles"),(0,o.kt)("p",null,"This API retrieves all roles assigned to a user. It accepts an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,o.kt)("p",null,"Request with ",(0,o.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Request using session (userId determined from session):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,o.kt)("p",null,"Response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "role_kcx66l"\n    ]\n}\n')))}d.isMDXComponent=!0}}]);