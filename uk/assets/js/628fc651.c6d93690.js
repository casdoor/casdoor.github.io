"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[860],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return t?a.createElement(k,o(o({ref:n},c),{},{components:t})):a.createElement(k,o({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},12772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const i={title:"\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0456 API Casbin",description:"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0438\u0445 API Casbin \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432 \u0432 \u043e\u0440\u0433\u0430\u043d\u0456\u0437\u0430\u0446\u0456\u044f\u0445",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},o=void 0,l={unversionedId:"permission/exposed-casbin-apis",id:"permission/exposed-casbin-apis",title:"\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0456 API Casbin",description:"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0438\u0445 API Casbin \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432 \u0432 \u043e\u0440\u0433\u0430\u043d\u0456\u0437\u0430\u0446\u0456\u044f\u0445",source:"@site/i18n/uk/docusaurus-plugin-content-docs/current/permission/exposed-casbin-apis.md",sourceDirName:"permission",slug:"/permission/exposed-casbin-apis",permalink:"/uk/docs/permission/exposed-casbin-apis",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/permission/exposed-casbin-apis.md",tags:[],version:"current",frontMatter:{title:"\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0456 API Casbin",description:"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0432\u0456\u0434\u043a\u0440\u0438\u0442\u0438\u0445 API Casbin \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0456\u043d\u043d\u044f \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0443 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432 \u0432 \u043e\u0440\u0433\u0430\u043d\u0456\u0437\u0430\u0446\u0456\u044f\u0445",keywords:["permissions","Casbin"],authors:["MagicalSheep"]},sidebar:"tutorialSidebar",previous:{title:"\u041a\u043e\u043d\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044f \u0434\u043e\u0437\u0432\u043e\u043b\u0456\u0432",permalink:"/uk/docs/permission/permission-configuration"},next:{title:"\u0410\u0434\u0430\u043f\u0442\u0435\u0440",permalink:"/uk/docs/permission/adapter"}},s={},p=[{value:"\u0412\u0441\u0442\u0443\u043f",id:"\u0432\u0441\u0442\u0443\u043f",level:2},{value:"\u0417\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0442\u0438",id:"\u0437\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0442\u0438",level:3},{value:"BatchEnforce",id:"batchenforce",level:3},{value:"GetAllObjects",id:"getallobjects",level:3},{value:"GetAllActions",id:"getallactions",level:3},{value:"GetAllRoles",id:"getallroles",level:3}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u0432\u0441\u0442\u0443\u043f"},"\u0412\u0441\u0442\u0443\u043f"),(0,r.kt)("p",null,"\u041f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u043e, \u0449\u043e \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0432\u0430\u0448\u043e\u0433\u043e \u0434\u043e\u0434\u0430\u0442\u043a\u0443 \u043e\u0442\u0440\u0438\u043c\u0430\u0432 ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," \u0437\u0430\u043b\u043e\u0433\u0456\u043d\u0435\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0456 \u0442\u0435\u043f\u0435\u0440 \u0445\u043e\u0447\u0435 \u0430\u0432\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0443\u0432\u0430\u0442\u0438 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0434\u043b\u044f \u0434\u0435\u044f\u043a\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0443. \u0412\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u043c\u0456\u0441\u0442\u0438\u0442\u0438 ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," \u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a HTTP-\u0437\u0430\u043f\u0438\u0442\u0443 \u0434\u043b\u044f \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0446\u0438\u0445 API, \u043e\u0441\u043a\u0456\u043b\u044c\u043a\u0438 Casdoor \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u043f\u043e\u043b\u0435 ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 \u0434\u043e\u0437\u0432\u043e\u043b\u0443 \u0434\u043e\u0441\u0442\u0443\u043f\u0443. \u042f\u043a \u0456 \u0431\u0443\u0434\u044c-\u044f\u043a\u0456 \u0456\u043d\u0448\u0456 API, \u0449\u043e \u043d\u0430\u0434\u0430\u044e\u0442\u044c\u0441\u044f Casdoor, \u043f\u043e\u043b\u0435 ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," \u0441\u043a\u043b\u0430\u0434\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440\u0430 \u043a\u043b\u0456\u0454\u043d\u0442\u0430 \u0434\u043e\u0434\u0430\u0442\u043a\u0443 \u0442\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u0443, \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u044e\u0447\u0438 ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7617"},"\u0421\u0445\u0435\u043c\u0443 \u0431\u0430\u0437\u043e\u0432\u043e\u0457 HTTP-\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0446\u0456\u0457"),". \u0426\u0435 \u0432\u0438\u0433\u043b\u044f\u0434\u0430\u0454 \u044f\u043a ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>"),". \u0417 \u0446\u0456\u0454\u0457 \u043f\u0440\u0438\u0447\u0438\u043d\u0438 API Casbin \u0441\u043b\u0456\u0434 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0442\u0438 \u0437 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0431\u0435\u043a\u0435\u043d\u0434\u0443 \u0434\u043e\u0434\u0430\u0442\u043a\u0443. \u041e\u0441\u044c \u043a\u0440\u043e\u043a\u0438, \u044f\u043a \u0446\u0435 \u0437\u0440\u043e\u0431\u0438\u0442\u0438."),(0,r.kt)("p",null,"\u0412\u0456\u0437\u044c\u043c\u0456\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0443 \u0434\u043e\u0434\u0430\u0442\u043e\u043a ",(0,r.kt)("a",{parentName:"p",href:"https://door.casdoor.com/applications/casbin/app-vue-python-example"},"app-vue-python-example")," \u043d\u0430 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0456\u0439\u043d\u043e\u043c\u0443 \u0441\u0430\u0439\u0442\u0456, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0456\u0457 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u0431\u0443\u0442\u0438: ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization: Basic 294b09fbc17f95daf2fe dd8982f7046ccba1bbd7851d5c1ece4e52bf039d"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u0424\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u043f\u0435\u0440\u0435\u0434\u0430\u0454 ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token")," \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0435\u043a\u0435\u043d\u0434\u0443 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a HTTP-\u0437\u0430\u043f\u0438\u0442\u0443."),(0,r.kt)("li",{parentName:"ol"},"\u0421\u0435\u0440\u0432\u0435\u0440 \u0431\u0435\u043a\u0435\u043d\u0434\u0443 \u043e\u0442\u0440\u0438\u043c\u0443\u0454 \u0456\u0434\u0435\u043d\u0442\u0438\u0444\u0456\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u0437 ",(0,r.kt)("inlineCode",{parentName:"li"},"access_token"),".")),(0,r.kt)("p",null,"\u042f\u043a \u043f\u043e\u043f\u0435\u0440\u0435\u0434\u043d\u0454 \u0437\u0430\u0443\u0432\u0430\u0436\u0435\u043d\u043d\u044f, \u0446\u0456 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0438 \u0442\u0430\u043a\u043e\u0436 \u0440\u043e\u0437\u0440\u043e\u0431\u043b\u0435\u043d\u0456 (\u043d\u0430\u0440\u0430\u0437\u0456) \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0456 ",(0,r.kt)("inlineCode",{parentName:"p"},"(sub, obj, act)"),". \u0422\u0456\u043b\u043e \u0454 \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c \u0437\u0430\u043f\u0438\u0442\u0443, \u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u043c \u043c\u043e\u0434\u0435\u043b\u043b\u044e Casbin \u0434\u043e\u0437\u0432\u043e\u043b\u0456\u0432, \u044f\u043a\u0438\u0439 \u0437\u0430\u0437\u0432\u0438\u0447\u0430\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0454 ",(0,r.kt)("inlineCode",{parentName:"p"},"sub"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"obj")," \u0442\u0430 ",(0,r.kt)("inlineCode",{parentName:"p"},"act")," \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u043e."),(0,r.kt)("p",null,"\u041a\u0440\u0456\u043c \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443 API \u0434\u043b\u044f \u0437\u0430\u043f\u0438\u0442\u0443 \u043d\u0430 \u0437\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044e \u0434\u043e\u0437\u0432\u043e\u043b\u0456\u0432, Casdoor \u0442\u0430\u043a\u043e\u0436 \u043d\u0430\u0434\u0430\u0454 \u0456\u043d\u0448\u0456 \u0456\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0438, \u044f\u043a\u0456 \u0434\u043e\u043f\u043e\u043c\u0430\u0433\u0430\u044e\u0442\u044c \u0437\u043e\u0432\u043d\u0456\u0448\u043d\u0456\u043c \u0434\u043e\u0434\u0430\u0442\u043a\u0430\u043c \u043e\u0442\u0440\u0438\u043c\u0443\u0432\u0430\u0442\u0438 \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044e \u043f\u0440\u043e \u043f\u043e\u043b\u0456\u0442\u0438\u043a\u0443 \u0434\u043e\u0437\u0432\u043e\u043b\u0456\u0432, \u044f\u043a\u0430 \u0442\u0430\u043a\u043e\u0436 \u0442\u0443\u0442 \u043f\u0435\u0440\u0435\u043b\u0456\u0447\u0435\u043d\u0430."),(0,r.kt)("h3",{id:"\u0437\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0442\u0438"},"\u0417\u0430\u0441\u0442\u043e\u0441\u0443\u0432\u0430\u0442\u0438"),(0,r.kt)("p",null,"The Enforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,r.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"resourceId"),": The identity of a resource - enforces against all permissions for this resource"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?permissionId=example-org/example-permission' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?modelId=example-org/example-model' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"resourceId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request POST 'http://localhost:8000/api/enforce?resourceId=example-org/example-resource' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>' \\\n--data-raw '[\"example-org/example-user\", \"example-resource\", \"example-action\"]'\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        true\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,r.kt)("p",null,"Note: When using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resourceId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple boolean values (one for each permission that was checked), and ",(0,r.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,r.kt)("h3",{id:"batchenforce"},"BatchEnforce"),(0,r.kt)("p",null,"The BatchEnforce API supports multiple query parameters to specify which permission(s) to enforce against. ",(0,r.kt)("strong",{parentName:"p"},"Only one parameter should be provided at a time"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"permissionId"),": The identity of a specific permission policy (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/permission name"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"modelId"),": The identity of a permission model (format: ",(0,r.kt)("inlineCode",{parentName:"li"},"organization name/model name"),") - enforces against all permissions using this model"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"enforcerId"),": The identity of a specific enforcer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner"),": The organization name - enforces against all permissions in this organization")),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"permissionId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?permissionId=example-org/example-permission\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"], ["example-org/example-user3", "example-resource", "example-action"]]\'\n')),(0,r.kt)("p",null,"Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl --location --request POST \'http://localhost:8000/api/batch-enforce?modelId=example-org/example-model\' \\\n--header \'Content-Type: application/json\' \\\n--header \'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>\' \\\n--data-raw \'[["example-org/example-user", "example-resource", "example-action"], ["example-org/example-user2", "example-resource", "example-action"]]\'\n')),(0,r.kt)("p",null,"\u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "sub": "",\n    "name": "",\n    "data": [\n        [\n            true,\n            true,\n            false\n        ]\n    ],\n    "data2": [\n        "example-org/example-model/example-adapter"\n    ]\n}\n')),(0,r.kt)("p",null,"Note: When using ",(0,r.kt)("inlineCode",{parentName:"p"},"modelId"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"enforcerId"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"owner")," parameters, the response ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," array may contain multiple arrays of boolean values (one array for each permission that was checked), and ",(0,r.kt)("inlineCode",{parentName:"p"},"data2")," contains the corresponding model and adapter identifiers."),(0,r.kt)("h3",{id:"getallobjects"},"GetAllObjects"),(0,r.kt)("p",null,"This API retrieves all objects (resources) that a user has access to. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-objects' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "app-built-in",\n        "example-resource"\n    ]\n}\n')),(0,r.kt)("h3",{id:"getallactions"},"GetAllActions"),(0,r.kt)("p",null,"This API retrieves all actions that a user can perform. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-actions' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "read",\n        "write",\n        "admin"\n    ]\n}\n')),(0,r.kt)("h3",{id:"getallroles"},"GetAllRoles"),(0,r.kt)("p",null,"This API retrieves all roles assigned to a user. It accepts an optional ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter. If not provided, it uses the logged-in user's session."),(0,r.kt)("p",null,"Request with ",(0,r.kt)("inlineCode",{parentName:"p"},"userId")," parameter:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles?userId=example-org/example-user' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"Request using session (userId determined from session):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"curl --location --request GET 'http://localhost:8000/api/get-all-roles' \\\n--header 'Authorization: Basic <Your_Application_ClientId> <Your_Application_ClientSecret>'\n")),(0,r.kt)("p",null,"\u0412\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": "ok",\n    "msg": "",\n    "data": [\n        "role_kcx66l"\n    ]\n}\n')))}u.isMDXComponent=!0}}]);