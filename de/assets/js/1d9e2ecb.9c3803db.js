"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[2619],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),g=i,h=p["".concat(l,".").concat(g)]||p[g]||u[g]||a;return t?r.createElement(h,o(o({ref:n},c),{},{components:t})):r.createElement(h,o({ref:n},c))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},14149:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(87462),i=(t(67294),t(3905));const a={title:"Spring Security Filter mit OIDC-Integration f\xfcr Casdoor",description:"Dieser Artikel erkl\xe4rt, wie man Spring Security Filter verwendet, um Ihre Anwendung mit Casdoor unter Verwendung von OIDC zu verbinden.",keywords:["OIDC","Spirng Security","Spring Security Filter","Filter","Casdoor"],authors:["wenxuan70"]},o=void 0,s={unversionedId:"integration/java/spring-security/spring-security-filter",id:"integration/java/spring-security/spring-security-filter",title:"Spring Security Filter mit OIDC-Integration f\xfcr Casdoor",description:"Dieser Artikel erkl\xe4rt, wie man Spring Security Filter verwendet, um Ihre Anwendung mit Casdoor unter Verwendung von OIDC zu verbinden.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/integration/java/spring-security/spring-security-filter.md",sourceDirName:"integration/java/spring-security",slug:"/integration/java/spring-security/spring-security-filter",permalink:"/de/docs/integration/java/spring-security/spring-security-filter",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/integration/java/spring-security/spring-security-filter.md",tags:[],version:"current",frontMatter:{title:"Spring Security Filter mit OIDC-Integration f\xfcr Casdoor",description:"Dieser Artikel erkl\xe4rt, wie man Spring Security Filter verwendet, um Ihre Anwendung mit Casdoor unter Verwendung von OIDC zu verbinden.",keywords:["OIDC","Spirng Security","Spring Security Filter","Filter","Casdoor"],authors:["wenxuan70"]},sidebar:"tutorialSidebar",previous:{title:"Spring Security OAuth",permalink:"/de/docs/integration/java/spring-security/spring-security-oauth"},next:{title:"Jenkins Plugin",permalink:"/de/docs/integration/java/jenkins-plugin"}},l={},d=[{value:"Schritt 1: Casdoor bereitstellen",id:"schritt-1-casdoor-bereitstellen",level:2},{value:"Schritt 2: Casdoor-Anwendung konfigurieren",id:"schritt-2-casdoor-anwendung-konfigurieren",level:2},{value:"Schritt 3: Spring Security konfigurieren",id:"schritt-3-spring-security-konfigurieren",level:2},{value:"Schritt 4: Frontend konfigurieren",id:"schritt-4-frontend-konfigurieren",level:2},{value:"Schritt 5: Ein Demo einrichten",id:"schritt-5-ein-demo-einrichten",level:2},{value:"Schritt 6: Das Demo ausprobieren",id:"schritt-6-das-demo-ausprobieren",level:2}],c={toc:d};function u(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Casdoor ist ein Open-Source-IDP, der OIDC und verschiedene andere Protokolle unterst\xfctzt. In diesem Artikel werden wir sehen, wie man Casdoor mit Ihrer Anwendung unter Verwendung von Spring Security Filter und OIDC integriert."),(0,i.kt)("h2",{id:"schritt-1-casdoor-bereitstellen"},"Schritt 1: Casdoor bereitstellen"),(0,i.kt)("p",null,"Zuerst m\xfcssen Sie den Casdoor-Server bereitstellen. Beziehen Sie sich auf die ",(0,i.kt)("a",{parentName:"p",href:"/docs/basic/server-installation"},"offizielle Dokumentation")," f\xfcr Anweisungen zur Serverinstallation. Nach erfolgreicher Bereitstellung stellen Sie sicher, dass:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Der Casdoor-Server l\xe4uft unter ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"http://localhost:8000"},"http://localhost:8000")),"."),(0,i.kt)("li",{parentName:"ul"},"Sie k\xf6nnen die Casdoor-Anmeldeseite unter ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"http://localhost:7001"},"http://localhost:7001"))," sehen."),(0,i.kt)("li",{parentName:"ul"},"Sie k\xf6nnen die Anmeldefunktionalit\xe4t testen, indem Sie sich mit den Anmeldedaten ",(0,i.kt)("inlineCode",{parentName:"li"},"admin")," und ",(0,i.kt)("inlineCode",{parentName:"li"},"123")," anmelden.")),(0,i.kt)("p",null,"Nachdem Sie diese Schritte \xfcberpr\xfcft haben, folgen Sie den untenstehenden Schritten, um Casdoor mit Ihrer Anwendung zu integrieren."),(0,i.kt)("h2",{id:"schritt-2-casdoor-anwendung-konfigurieren"},"Schritt 2: Casdoor-Anwendung konfigurieren"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Erstellen Sie eine neue Casdoor-Anwendung oder verwenden Sie eine bestehende."),(0,i.kt)("li",{parentName:"ul"},"F\xfcgen Sie Ihre Weiterleitungs-URL hinzu. Weitere Informationen zum Erhalten der Weiterleitungs-URL finden Sie im n\xe4chsten Abschnitt. ",(0,i.kt)("img",{alt:"Einstellungen der Casdoor-Anwendung",src:t(14794).Z,width:"974",height:"935"})),(0,i.kt)("li",{parentName:"ul"},"Erhalten Sie Ihr ",(0,i.kt)("inlineCode",{parentName:"li"},"Zertifikat")," auf der Seite zur Bearbeitung von Zertifikaten. ",(0,i.kt)("img",{alt:"Einstellungen der Casdoor-Zertifizierung",src:t(23185).Z,width:"1726",height:"800"})),(0,i.kt)("li",{parentName:"ul"},"F\xfcgen Sie den Anbieter und andere Einstellungen nach Bedarf hinzu.")),(0,i.kt)("p",null,"Sie k\xf6nnen die Werte f\xfcr ",(0,i.kt)("inlineCode",{parentName:"p"},"Application Name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Organization Name"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Redirect URL"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Client ID"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Client Secret")," und ",(0,i.kt)("inlineCode",{parentName:"p"},"Certificate")," auf der Seite der Anwendungseinstellungen erhalten. Wir werden sie im n\xe4chsten Schritt verwenden."),(0,i.kt)("h2",{id:"schritt-3-spring-security-konfigurieren"},"Schritt 3: Spring Security konfigurieren"),(0,i.kt)("p",null,"Sie k\xf6nnen die Einstellungen der Spring Security-Filter anpassen, um Token zu verarbeiten:"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Stellen Sie sicher, dass Sie die Konfigurationswerte durch Ihre eigenen Casdoor-Instanzwerte ersetzen, insbesondere ",(0,i.kt)("inlineCode",{parentName:"p"},"<Client ID>")," und die anderen.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"server:\n  port: 8080\ncasdoor:\n  endpoint: http://CASDOOR_HOSTNAME:8000\n  client-id: <Client ID>\n  client-secret: <Client Secret>\n  certificate: <Certificate>\n  organization-name: <Organization Name>\n  application-name: <Application Name>\n  redirect-url: http://FRONTEND_HOSTNAME/callback\n")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Bei Frontend-Anwendungen ist der Standardwert von ",(0,i.kt)("inlineCode",{parentName:"p"},"<FRONTEND_HOSTNAME>")," ",(0,i.kt)("inlineCode",{parentName:"p"},"localhost:3000"),". In dieser Demo ist die Weiterleitungs-URL ",(0,i.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/callback"),". Stellen Sie sicher, dass Sie dies in Ihrer ",(0,i.kt)("inlineCode",{parentName:"p"},"casdoor"),"-Anwendung konfigurieren.")),(0,i.kt)("h2",{id:"schritt-4-frontend-konfigurieren"},"Schritt 4: Frontend konfigurieren"),(0,i.kt)("p",null,"Sie m\xfcssen ",(0,i.kt)("inlineCode",{parentName:"p"},"casdoor-js-sdk")," installieren und das SDK wie folgt konfigurieren:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Installiere ",(0,i.kt)("inlineCode",{parentName:"p"},"casdoor-js-sdk"),"."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i casdoor-js-sdk \n# or\nyarn add casdoor-js-sdk\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Richte ",(0,i.kt)("inlineCode",{parentName:"p"},"SDK")," ein."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import Sdk from "casdoor-js-sdk";\n\n// Serverurl is the URL where spring security is deployed\nexport const ServerUrl = "http://BACKEND_HOSTNAME:8080";\n\nconst sdkConfig = {\n  serverUrl: "http://CASDOOR_HOSTNAME:8000",\n  clientId: "<your client id>",\n  appName: "<your application name>",\n  organizationName: "<your organization name>",\n  redirectPath: "/callback",\n};\n\nexport const CasdoorSDK = new Sdk(sdkConfig);\n')))),(0,i.kt)("h2",{id:"schritt-5-ein-demo-einrichten"},"Schritt 5: Ein Demo einrichten"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Erstellen Sie eine Spring Boot-Anwendung.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"F\xfcgen Sie einige Konfigurationen hinzu, um JWT zu verarbeiten."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@EnableWebSecurity\npublic class SecurityConfig {\n\n    private final JwtTokenFilter jwtTokenFilter;\n\n    public SecurityConfig(JwtTokenFilter jwtTokenFilter) {\n        this.jwtTokenFilter = jwtTokenFilter;\n    }\n\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        // enable CORS and disable CSRF\n        http = http.cors(corsConfig -> corsConfig\n                .configurationSource(configurationSource())\n        ).csrf().disable();\n\n        // set session management to stateless\n        http = http\n                .sessionManagement()\n                .sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n                .and();\n\n        // set permissions on endpoints\n        http.authorizeHttpRequests(authorize -> authorize\n                .mvcMatchers("/api/redirect-url", "/api/signin").permitAll()\n                .mvcMatchers("/api/**").authenticated()\n        );\n\n        // set unauthorized requests exception handler\n        http = http\n                .exceptionHandling()\n                .authenticationEntryPoint(\n                        (request, response, ex) -> ResponseUtils.fail(response, "unauthorized")\n                )\n                .and();\n\n        // add JWT token filter\n        http.addFilterBefore(\n                jwtTokenFilter,\n                UsernamePasswordAuthenticationFilter.class\n        );\n        return http.build();\n    }\n\n    // ...\n')))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"}\n```\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"F\xfcgen Sie einen einfachen JWT-Filter hinzu, um Anfragen zu unterbrechen, die eine Token-\xdcberpr\xfcfung erfordern."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},'@Component\npublic class JwtTokenFilter extends OncePerRequestFilter {\n\n    private final CasdoorAuthService casdoorAuthService;\n\n    public JwtTokenFilter(CasdoorAuthService casdoorAuthService) {\n        this.casdoorAuthService = casdoorAuthService;\n    }\n\n    @Override\n    protected void doFilterInternal(HttpServletRequest request,\n                                    HttpServletResponse response,\n                                    FilterChain chain)\n            throws ServletException, IOException {\n        // get authorization header and validate\n        final String header = request.getHeader(HttpHeaders.AUTHORIZATION);\n        if (!StringUtils.hasText(header) || !header.startsWith("Bearer ")) {\n            chain.doFilter(request, response);\n            return;\n        }\n\n        // get jwt token and validate\n        final String token = header.split(" ")[1].trim();\n\n        // get user identity and set it on the spring security context\n        UserDetails userDetails = null;\n        try {\n            CasdoorUser casdoorUser = casdoorAuthService.parseJwtToken(token);\n            userDetails = new CustomUserDetails(casdoorUser);\n        } catch (CasdoorAuthException exception) {\n            logger.error("casdoor auth exception", exception);\n            chain.doFilter(request, response);\n            return;\n        }\n\n        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(\n                userDetails,\n                null,\n                AuthorityUtils.createAuthorityList("ROLE_casdoor")\n        );\n\n        authentication.setDetails(\n                new WebAuthenticationDetailsSource().buildDetails(request)\n        );\n\n        SecurityContextHolder.getContext().setAuthentication(authentication);\n        chain.doFilter(request, response);\n    }\n\n}\n')),(0,i.kt)("p",{parentName:"li"},"Wenn der Benutzer auf die Schnittstelle zugreift, die eine Authentifizierung erfordert, wird ",(0,i.kt)("inlineCode",{parentName:"p"},"JwtTokenFilter")," das Token aus dem Anfrage-Header ",(0,i.kt)("inlineCode",{parentName:"p"},"Authorization")," entnehmen und es verifizieren.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Definieren Sie einen ",(0,i.kt)("inlineCode",{parentName:"p"},"Controller"),", um zu handhaben, wenn sich der Benutzer bei Casdoor anmeldet. Nachdem sich der Benutzer angemeldet hat, wird er zum Server weitergeleitet und tr\xe4gt den ",(0,i.kt)("inlineCode",{parentName:"p"},"code")," und ",(0,i.kt)("inlineCode",{parentName:"p"},"state"),". Der Server muss dann die Identit\xe4t des Benutzers von Casdoor \xfcberpr\xfcfen und das ",(0,i.kt)("inlineCode",{parentName:"p"},"token")," durch diese beiden Parameter erhalten."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-java"},"@RestController\npublic class UserController {\n\n    private static final Logger logger = LoggerFactory.getLogger(UserController.class);\n\n    private final CasdoorAuthService casdoorAuthService;\n\n    // ...\n")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    @PostMapping("/api/signin")\n    public Result signin(@RequestParam("code") String code, @RequestParam("state") String state) {\n        try {\n            String token = casdoorAuthService.getOAuthToken(code, state);\n            return Result.success(token);\n        } catch (CasdoorAuthException exception) {\n            logger.error("casdoor auth exception", exception);\n            return Result.failure(exception.getMessage());\n        }\n    }\n\n    // ...\n}\n```\n')),(0,i.kt)("h2",{id:"schritt-6-das-demo-ausprobieren"},"Schritt 6: Das Demo ausprobieren"),(0,i.kt)("p",null,"Sie k\xf6nnen auf die Frontend-Anwendung \xfcber Ihren Browser zugreifen. Wenn Sie nicht angemeldet sind, sehen Sie einen Anmeldebutton. Klicken Sie darauf, und Sie werden zur Casdoor-Anmeldeseite weitergeleitet."),(0,i.kt)("p",null,"Wenn Sie Ihre Startseite besuchen,",(0,i.kt)("img",{alt:"willkommen",src:t(2189).Z,width:"1920",height:"942"})),(0,i.kt)("p",null,"Klicken Sie auf den ",(0,i.kt)("inlineCode",{parentName:"p"},"Casdoor Login"),"-Button, und die Seite wird zur Anmeldeseite von Casdoor weitergeleitet. ",(0,i.kt)("img",{alt:"casdoor",src:t(7763).Z,width:"1920",height:"942"})),(0,i.kt)("p",null,"Nachdem Sie sich angemeldet haben, werden Sie zu ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," weitergeleitet. ",(0,i.kt)("img",{alt:"Ressource",src:t(83922).Z,width:"1920",height:"942"})))}u.isMDXComponent=!0},23185:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/casdoor_certification-fab3970e250b9e55213bb833f35f09d0.png"},14794:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/casdoor_setting-fca4ce21a48b644d6bbe251ca27271b7.png"},7763:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/spring_security_filter_casdoor-cd320a7fc7fb2a735740d4a57d56e7d8.png"},83922:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/spring_security_filter_resource-1095701ba0a994c50e87885b53e22a77.png"},2189:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/spring_security_filter_welcome-3258334efe51769aea33778f46287a78.png"}}]);