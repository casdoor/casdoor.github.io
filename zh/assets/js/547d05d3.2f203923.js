(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[7990],{56246:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(74034),a=t(79973),o=(t(67294),t(3905)),i=["components"],s={title:"SAML"},l=void 0,c={unversionedId:"how-to-connect/saml",id:"how-to-connect/saml",isDocsHomePage:!1,title:"SAML",description:"\u4f7f\u7528 Casdoor \u4f5c\u4e3a SAML IdP",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/how-to-connect/saml.md",sourceDirName:"how-to-connect",slug:"/how-to-connect/saml",permalink:"/zh/docs/how-to-connect/saml",editUrl:"https://github.com/casdoor/casdoor-website/tree/master/docs/how-to-connect/saml.md",tags:[],version:"current",frontMatter:{title:"SAML"},sidebar:"tutorialSidebar",previous:{title:"CAS",permalink:"/zh/docs/how-to-connect/cas"},next:{title:"\u524d\u7aef",permalink:"/zh/docs/developer-guide/frontend"}},p=[{value:"\u4f7f\u7528 Casdoor \u4f5c\u4e3a SAML IdP",id:"\u4f7f\u7528-casdoor-\u4f5c\u4e3a-saml-idp",children:[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",children:[],level:3},{value:"\u4e00\u4e2a\u793a\u4f8b",id:"\u4e00\u4e2a\u793a\u4f8b",children:[],level:3},{value:"Casdoor as a SAML IdP in keycloak",id:"casdoor-as-a-saml-idp-in-keycloak",children:[{value:"Add SAML IdP in Keycloak",id:"add-saml-idp-in-keycloak",children:[],level:4},{value:"Configure SAML application in Casdoor",id:"configure-saml-application-in-casdoor",children:[],level:4},{value:"Login using Casdoor SAML",id:"login-using-casdoor-saml",children:[],level:4}],level:3}],level:2}],d={toc:p};function u(e){var n=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u4f7f\u7528-casdoor-\u4f5c\u4e3a-saml-idp"},"\u4f7f\u7528 Casdoor \u4f5c\u4e3a SAML IdP"),(0,o.kt)("p",null,"Cassdoor \u73b0\u5728\u53ef\u4ee5\u7528\u4f5cCAS \u670d\u52a1\u5668\u3002 \u76ee\u524dCasdoor\u652f\u6301CAS2.0 \u7684\u529f\u80fd\u3002"),(0,o.kt)("h3",{id:"\u7b80\u4ecb"},"\u7b80\u4ecb"),(0,o.kt)("p",null,"Casdoor \u7684 SAML \u7aef\u70b9\u7684\u5143\u6570\u636e\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"<Endpoint of casdoor>/api/saml/metdata ?application=<organization name>/<application name>"),"\u3002 \u60a8\u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u7f16\u8f91\u9875\u9762\u4e2d\u627e\u5230\u5143\u6570\u636e\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(63982).Z})),(0,o.kt)("p",null,"\u5047\u8bbeCassdoor \u7684\u7aef\u70b9\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"https://door.casdoor.com "),", \u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in")," \u5c5e\u4e8e\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"built-in")," \u7684\u5e94\u7528\u7a0b\u5e8f\u3002"),(0,o.kt)("p",null,"\u66f4\u591a\u5173\u4e8e SAML \u53ca\u5176\u4e0d\u540c\u7248\u672c\u7684\u4fe1\u606f\uff0c\u8bf7\u8bbf\u95ee ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SAML_2.0"},"https://en.wikipedia.org/wiki/SAML_2.0")),(0,o.kt)("h3",{id:"\u4e00\u4e2a\u793a\u4f8b"},"\u4e00\u4e2a\u793a\u4f8b"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/russellhaering/gosaml2"},"gosaml2")," \u662f\u9488\u5bf9\u670d\u52a1\u63d0\u4f9b\u5546\u7684 SAML 2.0\u5b9e\u73b0\uff0c\u57fa\u4e8eetree\u548cgoxmldsig\uff0c\u8fd9\u4e2aXML\u6570\u5b57\u7b7e\u540d\u662f\u57fa\u4e8e Go \u5b9e\u73b0\u3002 \u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u5e93\u5728 Casdoor \u4e2d\u6d4b\u8bd5 SAML 2.0\uff0c\u5982\u4e0b\u6240\u793a\u3002"),(0,o.kt)("p",null,"\u5047\u8bbeCassdoor \u7684\u7aef\u70b9\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"https://door.casdoor.com "),", \u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in")," \u5c5e\u4e8e\u4e00\u4e2a\u540d\u4e3a ",(0,o.kt)("inlineCode",{parentName:"p"},"built-in")," \u7684\u5e94\u7528\u7a0b\u5e8f\u3002 ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/acs/example")," \u548c",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:6900/saml/acs/example"),"\uff0c\u5e94\u6dfb\u52a0\u5230",(0,o.kt)("inlineCode",{parentName:"p"},"app-built-in"),"\u7684\u91cd\u5b9a\u5411URL\u4e2d\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "crypto/x509"\n    "fmt"\n    "net/http"\n\n    "io/ioutil"\n\n    "encoding/base64"\n    "encoding/xml"\n\n    saml2 "github.com/russellhaering/gosaml2"\n    "github.com/russellhaering/gosaml2/types"\n    dsig "github.com/russellhaering/goxmldsig"\n)\n\nfunc main() {\n    res, err := http.Get("http://localhost:7001/api/saml/metadata?application=admin/app-built-in")\n    if err != nil {\n        panic(err)\n    }\n\n    rawMetadata, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        panic(err)\n    }\n\n    metadata := &types.EntityDescriptor{}\n    err = xml.Unmarshal(rawMetadata, metadata)\n    if err != nil {\n        panic(err)\n    }\n\n    certStore := dsig.MemoryX509CertificateStore{\n        Roots: []*x509.Certificate{},\n    }\n\n    for _, kd := range metadata.IDPSSODescriptor.KeyDescriptors {\n        for idx, xcert := range kd.KeyInfo.X509Data.X509Certificates {\n            if xcert.Data == "" {\n                panic(fmt.Errorf("metadata certificate(%d) must not be empty", idx))\n            }\n            certData, err := base64.StdEncoding.DecodeString(xcert.Data)\n            if err != nil {\n                panic(err)\n            }\n\n            idpCert, err := x509.ParseCertificate(certData)\n            if err != nil {\n                panic(err)\n            }\n\n            certStore.Roots = append(certStore.Roots, idpCert)\n        }\n    }\n\n    randomKeyStore := dsig.RandomKeyStoreForTest()\n\n    sp := &saml2.SAMLServiceProvider{\n        IdentityProviderSSOURL:      metadata.IDPSSODescriptor.SingleSignOnServices[0].Location,\n        IdentityProviderIssuer:      metadata.EntityID,\n        ServiceProviderIssuer:       "http://localhost:6900/acs/example",\n        AssertionConsumerServiceURL: "http://localhost:6900/v1/_saml_callback",\n        SignAuthnRequests:           true,\n        AudienceURI:                 "http://localhost:6900/saml/acs/example",\n        IDPCertificateStore:         &certStore,\n        SPKeyStore:                  randomKeyStore,\n    }\n\n    http.HandleFunc("/v1/_saml_callback", func(rw http.ResponseWriter, req *http.Request) {\n        err := req.ParseForm()\n        if err != nil {\n            rw.WriteHeader(http.StatusBadRequest)\n            return\n        }\n        samlReponse := req.URL.Query().Get("SAMLResponse")\n        assertionInfo, err := sp.RetrieveAssertionInfo(samlReponse)\n        if err != nil {\n            fmt.Println(err)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n        fmt.Println(assertionInfo)\n        if assertionInfo.WarningInfo.InvalidTime {\n            fmt.Println("here12:", assertionInfo.WarningInfo.InvalidTime)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        if assertionInfo.WarningInfo.NotInAudience {\n            fmt.Println(assertionInfo)\n            fmt.Println("here13:", assertionInfo.WarningInfo.NotInAudience)\n            rw.WriteHeader(http.StatusForbidden)\n            return\n        }\n\n        fmt.Fprintf(rw, "NameID: %s\\n", assertionInfo.NameID)\n\n        fmt.Fprintf(rw, "Assertions:\\n")\n\n        for key, val := range assertionInfo.Values {\n            fmt.Fprintf(rw, "  %s: %+v\\n", key, val)\n        }\n        fmt.Println(assertionInfo.Values.Get("FirstName"))\n        fmt.Fprintf(rw, "\\n")\n\n        fmt.Fprintf(rw, "Warnings:\\n")\n        fmt.Fprintf(rw, "%+v\\n", assertionInfo.WarningInfo)\n    })\n\n    println("Visit this URL To Authenticate:")\n    authURL, err := sp.BuildAuthURL("")\n    if err != nil {\n        panic(err)\n    }\n\n    println(authURL)\n\n    println("Supply:")\n    fmt.Printf("  SP ACS URL      : %s\\n", sp.AssertionConsumerServiceURL)\n\n    err = http.ListenAndServe(":6900", nil)\n    if err != nil {\n        panic(err)\n    }\n}\n')),(0,o.kt)("p",null,"\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u63a7\u5236\u53f0\u5c06\u663e\u793a\u4ee5\u4e0b\u6d88\u606f\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Visit this URL To Authenticate:\nhttp://localhost:7001/login/saml/authorize/admin/app-built-in?SAMLRequest=lFVbk6K8Fv0rFvNo2QR...\nSupply:\n  SP ACS URL      : http://localhost:6900/v1/_saml_callback\n")),(0,o.kt)("p",null,"\u70b9\u51fb URL \u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5c06\u663e\u793a Casdoor \u7684\u767b\u5f55\u9875\u9762\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(54981).Z})),(0,o.kt)("p",null,"\u9a8c\u8bc1\u540e\uff0c\u60a8\u5c06\u83b7\u5f97\u5982\u4e0b\u54cd\u5e94\u6d88\u606f\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(21821).Z})),(0,o.kt)("h3",{id:"casdoor-as-a-saml-idp-in-keycloak"},"Casdoor as a SAML IdP in keycloak"),(0,o.kt)("p",null,"This guide will show you how to configure Casdoor and Keycloak to add Casdoor as a SAML IdP in Keycloak."),(0,o.kt)("h4",{id:"add-saml-idp-in-keycloak"},"Add SAML IdP in Keycloak"),(0,o.kt)("p",null,"Open Keycloak admin page, click ",(0,o.kt)("strong",{parentName:"p"},"Identity Providers")," and select ",(0,o.kt)("strong",{parentName:"p"},"SAML v2.0")," from the list of providers."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(81179).Z})),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"You can visit Keycloak SAML Identity Providers ",(0,o.kt)("a",{parentName:"h5",href:"https://www.keycloak.org/docs/latest/server_admin/#saml-v2-0-identity-providers"},"documentation")," to get more detailed information.")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"})),(0,o.kt)("p",null,"Enter the ",(0,o.kt)("strong",{parentName:"p"},"Alias")," and the ",(0,o.kt)("strong",{parentName:"p"},"Import from URL")," in Keycloak IdP edit page. The content of ",(0,o.kt)("strong",{parentName:"p"},"Import from URL")," can be found in the Casdoor application edit page. Click ",(0,o.kt)("strong",{parentName:"p"},"Import")," and the SAML config will be filled automatically."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(55756).Z})),(0,o.kt)("p",null,"You should remenber the ",(0,o.kt)("strong",{parentName:"p"},"Service Provider Entity ID")," and then save the configuration."),(0,o.kt)("h4",{id:"configure-saml-application-in-casdoor"},"Configure SAML application in Casdoor"),(0,o.kt)("p",null,"In the application edit page, add a redirect URL which the content of it is ",(0,o.kt)("strong",{parentName:"p"},"Service Provider Entity ID")," in Keycloak. And you should enable SAML compress for Keycloak."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(98808).Z})),(0,o.kt)("h4",{id:"login-using-casdoor-saml"},"Login using Casdoor SAML"),(0,o.kt)("p",null,"Open the Keycloak login page and you can find the additional button that allows you to login to Keycloak using the Casdoor SAML provider."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(13848).Z})),(0,o.kt)("p",null,"Click on the button and you will be redirected to the Casdoor SAML provider for the authentication. After the successful authentication you will be redirected back to Keycloak. Then you need to assign users to the application."),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(19943).Z})),(0,o.kt)("p",null,"We also provide a demo video to demonstrate the entire process, which we hope will be helpful to you."),(0,o.kt)("video",{src:"/video/saml_keycloak.mp4",controls:"controls",width:"100%"}))}u.isMDXComponent=!0},3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},98808:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_keycloak_compress-31ccc297f3c517c6ffe24f38a25137f6.png"},81179:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_keycloak_idp_create-2b0cc39c21d6a1b6076844bfc5470b1d.png"},55756:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_keycloak_idp_edit-4963c9be36f7011c41f2b431a9478417.png"},13848:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_keycloak_login-d5b72edf974b0844ee37037fe8ff41f5.png"},19943:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_keycloak_success-c8961ef7869d53c11d269d8723955ccc.png"},54981:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_login-bf1964a645b97ac59818a2d352a733aa.png"},63982:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_metadata-c86efd52682487703ca160f25717ed40.png"},21821:function(e,n,t){"use strict";n.Z=t.p+"assets/images/saml_response-b3ad831adea4c2d5b78f6ffa5e410ab6.png"}}]);