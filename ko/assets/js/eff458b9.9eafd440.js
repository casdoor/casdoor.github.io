"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[1747],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,l(l({ref:t},s),{},{components:n})):o.createElement(h,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},52981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={title:"Electron App",description:"An Electron app example for Casdoor",keywords:["electron","sdk"],authors:["Resulte"]},l=void 0,i={unversionedId:"how-to-connect/desktop-sdks/electron-app",id:"how-to-connect/desktop-sdks/electron-app",title:"Electron App",description:"An Electron app example for Casdoor",source:"@site/docs/how-to-connect/desktop-sdks/electron-app.md",sourceDirName:"how-to-connect/desktop-sdks",slug:"/how-to-connect/desktop-sdks/electron-app",permalink:"/ko/docs/how-to-connect/desktop-sdks/electron-app",draft:!1,editUrl:"https://crowdin.com/project/casdoor-website/ko",tags:[],version:"current",frontMatter:{title:"Electron App",description:"An Electron app example for Casdoor",keywords:["electron","sdk"],authors:["Resulte"]},sidebar:"tutorialSidebar",previous:{title:"Desktop SDKs",permalink:"/ko/docs/category/desktop-sdks"},next:{title:"Dotnet Desktop App",permalink:"/ko/docs/how-to-connect/desktop-sdks/dotnet-app"}},p={},c=[{value:"How to run example",id:"how-to-run-example",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Available commands",id:"available-commands",level:3},{value:"<code>npm run dev</code> or <code>yarn dev</code>",id:"npm-run-dev-or-yarn-dev",level:4},{value:"<code>npm run make</code> or <code>yarn make</code>",id:"npm-run-make-or-yarn-make",level:4},{value:"Prview",id:"prview",level:3},{value:"How to integrate",id:"how-to-integrate",level:2},{value:"Set the custom protocol",id:"set-the-custom-protocol",level:3},{value:"Open the login url by the browser",id:"open-the-login-url-by-the-browser",level:3},{value:"Listen to the open application event",id:"listen-to-the-open-application-event",level:3},{value:"Parse the code and get the user info",id:"parse-the-code-and-get-the-user-info",level:3}],s={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/casdoor/casdoor-electron-example"},"Electron app example")," for Casdoor."),(0,r.kt)("h2",{id:"how-to-run-example"},"How to run example"),(0,r.kt)("h3",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"You need to initialize 6 parameters, which are all string type:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Path"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"serverUrl"),(0,r.kt)("td",{parentName:"tr",align:null},"your Casdoor server URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clientId"),(0,r.kt)("td",{parentName:"tr",align:null},"the Client ID of your Casdoor application"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"appName"),(0,r.kt)("td",{parentName:"tr",align:null},"the name of your Casdoor application"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redirectPath"),(0,r.kt)("td",{parentName:"tr",align:null},"the path of the redirect URL for your Casdoor application, will be ",(0,r.kt)("inlineCode",{parentName:"td"},"/callback")," if not provided"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clientSecret"),(0,r.kt)("td",{parentName:"tr",align:null},"the Client Secret\xa0of your Casdoor application"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"src/App.js"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"casdoorServiceDomain"),(0,r.kt)("td",{parentName:"tr",align:null},"your Casdoor server URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"public/electron.js"))))),(0,r.kt)("p",null,"If you don't set these parameters, this project will use the ",(0,r.kt)("a",{parentName:"p",href:"https://door.casdoor.com/"},"Casdoor online demo")," as the default Casdoor server and use the ",(0,r.kt)("a",{parentName:"p",href:"https://door.casdoor.com/applications/app-casnode"},"Casnode")," as the default Casdoor application."),(0,r.kt)("h3",{id:"available-commands"},"Available commands"),(0,r.kt)("p",null,"In the project directory, you can run:"),(0,r.kt)("h4",{id:"npm-run-dev-or-yarn-dev"},(0,r.kt)("inlineCode",{parentName:"h4"},"npm run dev")," or ",(0,r.kt)("inlineCode",{parentName:"h4"},"yarn dev")),(0,r.kt)("p",null,"Builds the electron app and run this app."),(0,r.kt)("h4",{id:"npm-run-make-or-yarn-make"},(0,r.kt)("inlineCode",{parentName:"h4"},"npm run make")," or ",(0,r.kt)("inlineCode",{parentName:"h4"},"yarn make")),(0,r.kt)("p",null,"Package and distribute your application. It will create the ",(0,r.kt)("inlineCode",{parentName:"p"},"out")," folder where your package will be located:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Example for macOS out/  \n\u251c\u2500\u2500 out/make/zip/darwin/x64/casdoor-electron-example-darwin-x64-1.0.0.zip  \n\u251c\u2500\u2500 ...  \n\u2514\u2500\u2500 out/casdoor-electron-example-darwin-x64/casdoor-electron-example.app/Contents/MacOS/casdoor-electron-example\n")),(0,r.kt)("h3",{id:"prview"},"Prview"),(0,r.kt)("p",null,"After you run this electron application, a new window will be showed on your desktop.\n",(0,r.kt)("img",{alt:"electron login",src:n(64417).Z,width:"1614",height:"1210"}),"\nIf you click ",(0,r.kt)("inlineCode",{parentName:"p"},"Login with Casdoor")," button, your default browser will be opened automatically and show the login page.\n",(0,r.kt)("img",{alt:"browser",src:n(75975).Z,width:"3834",height:"1888"}),"\nAfter you login successfully, your electron application will be opened and your user name will be showed on your application.\n",(0,r.kt)("img",{alt:"electron logout",src:n(36766).Z,width:"1604",height:"1206"}),"\nYou can preview the whole process by the gif image below.\n",(0,r.kt)("img",{alt:"electron gif",src:n(29200).Z,width:"2872",height:"1800"})),(0,r.kt)("h2",{id:"how-to-integrate"},"How to integrate"),(0,r.kt)("h3",{id:"set-the-custom-protocol"},"Set the custom protocol"),(0,r.kt)("p",null,"Firstly, you need to set the custom protocol called ",(0,r.kt)("inlineCode",{parentName:"p"},"casdoor"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const protocol = "casdoor";\n\nif (process.defaultApp) {\n  if (process.argv.length >= 2) {\n    app.setAsDefaultProtocolClient(protocol, process.execPath, [\n      path.resolve(process.argv[1]),\n    ]);\n  }\n} else {\n  app.setAsDefaultProtocolClient(protocol);\n}\n')),(0,r.kt)("p",null,"This will help the browser to open your electron application and send the login info to the electron application."),(0,r.kt)("h3",{id:"open-the-login-url-by-the-browser"},"Open the login url by the browser"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const serverUrl = "https://door.casdoor.com";\nconst appName = "app-casnode";\nconst redirectPath = "/callback";\nconst clientId = "014ae4bd048734ca2dea";\nconst clientSecret = "f26a4115725867b7bb7b668c81e1f8f7fae1544d";\n\nconst redirectUrl = "casdoor://localhost:3000" + redirectPath;\n\nconst signinUrl = `${serverUrl}/login/oauth/authorize?client_id=${clientId}&response_type=code&redirect_uri=${encodeURIComponent(redirectUrl)}&scope=profile&state=${appName}&noRedirect=true`;\n\nshell.openExternal(signinUrl); //Open the login url by the browser\n')),(0,r.kt)("p",null,"You can change the first 5 parameters."),(0,r.kt)("h3",{id:"listen-to-the-open-application-event"},"Listen to the open application event"),(0,r.kt)("p",null,"After you login successfully in the browser, the browser will open your electron application. You need to listen to the open application event."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const gotTheLock = app.requestSingleInstanceLock();\nconst ProtocolRegExp = new RegExp(`^${protocol}://`);\n\nif (!gotTheLock) {\n  app.quit();\n} else {\n  app.on("second-instance", (event, commandLine, workingDirectory) => {\n    if (mainWindow) {\n      if (mainWindow.isMinimized()) mainWindow.restore();\n      mainWindow.focus();\n      commandLine.forEach((str) => {\n        if (ProtocolRegExp.test(str)) {\n          const params = url.parse(str, true).query;\n          if (params && params.code) {\n            store.set("casdoor_code", params.code);\n            mainWindow.webContents.send("receiveCode", params.code);\n          }\n        }\n      });\n    }\n  });\n  app.whenReady().then(createWindow);\n\n  app.on("open-url", (event, openUrl) => {\n    const isProtocol = ProtocolRegExp.test(openUrl);\n    if (isProtocol) {\n      const params = url.parse(openUrl, true).query;\n      if (params && params.code) {\n        store.set("casdoor_code", params.code);\n        mainWindow.webContents.send("receiveCode", params.code);\n      }\n    }\n  });\n}\n')),(0,r.kt)("p",null,"You can get the code from the browser, which is ",(0,r.kt)("inlineCode",{parentName:"p"},"casdoor_code")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"params.code"),"."),(0,r.kt)("h3",{id:"parse-the-code-and-get-the-user-info"},"Parse the code and get the user info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'async function getUserInfo(clientId, clientSecret, code) {\n  const { data } = await axios({\n    method: "post",\n    url: authCodeUrl,\n    headers: {\n      "content-type": "application/json",\n    },\n    data: JSON.stringify({\n      grant_type: "authorization_code",\n      client_id: clientId,\n      client_secret: clientSecret,\n      code: code,\n    }),\n  });\n  const resp = await axios({\n    method: "get",\n    url: `${getUserInfoUrl}?accessToken=${data.access_token}`,\n  });\n  return resp.data;\n}\n\nipcMain.handle("getUserInfo", async (event, clientId, clientSecret) => {\n  const code = store.get("casdoor_code");\n  const userInfo = await getUserInfo(clientId, clientSecret, code);\n  store.set("userInfo", userInfo);\n  return userInfo;\n});\n')),(0,r.kt)("p",null,"Finally, you can parse the code and get the user info just by following the ",(0,r.kt)("a",{parentName:"p",href:"/docs/how-to-connect/oauth"},"OAuth docs page"),"."))}d.isMDXComponent=!0},75975:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/browser-604defe3a2abf42147ead02ed9b32d5d.png"},64417:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/login-1d46dd2e398ebe52379c87012d532d03.png"},36766:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/logout-11692c9485daae428f959dae337c97f8.png"},29200:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/preview-7cb64e6ccdec9838ba77e9e85cf97985.gif"}}]);