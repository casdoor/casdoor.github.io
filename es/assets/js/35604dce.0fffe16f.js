"use strict";(self.webpackChunkcasdoor_website=self.webpackChunkcasdoor_website||[]).push([[5512],{3905:(e,n,o)=>{o.d(n,{Zo:()=>d,kt:()=>m});var t=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=t.createContext({}),l=function(e){var n=t.useContext(c),o=n;return e&&(o="function"==typeof e?e(n):s(s({},n),e)),o},d=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(o),m=r,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return o?t.createElement(f,s(s({ref:n},d),{},{components:o})):t.createElement(f,s({ref:n},d))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,s=new Array(a);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=o[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,o)}u.displayName="MDXCreateElement"},32138:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=o(87462),r=(o(67294),o(3905));const a={title:"Desplegando en Kubernetes",description:"Aprende c\xf3mo desplegar Casdoor en un cl\xfaster de Kubernetes",keywords:["k8s","Kubernetes","Casdoor","deployment"],authors:["ComradeProgrammer"]},s=void 0,i={unversionedId:"deployment/k8s",id:"deployment/k8s",title:"Desplegando en Kubernetes",description:"Aprende c\xf3mo desplegar Casdoor en un cl\xfaster de Kubernetes",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/deployment/k8s.md",sourceDirName:"deployment",slug:"/deployment/k8s",permalink:"/es/docs/deployment/k8s",draft:!1,editUrl:"https://github.com/casdoor/casdoor-website/edit/master/docs/deployment/k8s.md",tags:[],version:"current",frontMatter:{title:"Desplegando en Kubernetes",description:"Aprende c\xf3mo desplegar Casdoor en un cl\xfaster de Kubernetes",keywords:["k8s","Kubernetes","Casdoor","deployment"],authors:["ComradeProgrammer"]},sidebar:"tutorialSidebar",previous:{title:"Implementando en NGINX",permalink:"/es/docs/deployment/nginx"},next:{title:"Inicializaci\xf3n de Datos",permalink:"/es/docs/deployment/data-initialization"}},c={},l=[{value:"Desplegar Casdoor en Kubernetes (k8s)",id:"desplegar-casdoor-en-kubernetes-k8s",level:2}],d={toc:l};function p(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"desplegar-casdoor-en-kubernetes-k8s"},"Desplegar Casdoor en Kubernetes (k8s)"),(0,r.kt)("p",null,'Proporcionamos un ejemplo b\xe1sico de c\xf3mo desplegar Casdoor en un cl\xfaster de Kubernetes. En la carpeta ra\xedz de Casdoor, encontrar\xe1s un archivo llamado "k8s.yaml". Este archivo contiene un ejemplo de configuraci\xf3n para desplegar Casdoor en Kubernetes, incluyendo un despliegue y un servicio.'),(0,r.kt)("p",null,"Antes de iniciar el despliegue, aseg\xfarate de haber modificado el archivo ",(0,r.kt)("inlineCode",{parentName:"p"},"conf/app.conf")," para que Casdoor pueda conectarse a la base de datos con \xe9xito y que la base de datos misma est\xe9 en funcionamiento. Adem\xe1s, aseg\xfarate de que Kubernetes pueda descargar las im\xe1genes necesarias."),(0,r.kt)("p",null,"Para desplegar Casdoor, ejecuta el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s.yaml\n")),(0,r.kt)("p",null,"Puedes verificar el estado del despliegue ejecutando el comando ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get pods"),"."),(0,r.kt)("p",null,"Aqu\xed est\xe1 el contenido de ",(0,r.kt)("inlineCode",{parentName:"p"},"k8s.yaml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# this is only an EXAMPLE of deploying casddor in kubernetes\n# please modify this file according to your requirements\napiVersion: v1\nkind: Service\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-svc\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this filed\n  type: NodePort\n  ports:\n    - port: 8000\n  selector:\n    app: casdoor\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  #EDIT IT: if you don't want to run casdoor in default namespace, please modify this field\n  #namespace: casdoor\n  name: casdoor-deployment\n  labels:\n    app: casdoor\nspec:\n  #EDIT IT: if you don't use redis, casdoor should not have multiple replicas\n  replicas: 1\n  selector:\n    matchLabels:\n      app: casdoor\n  template:\n    metadata:\n      labels:\n        app: casdoor\n    spec:\n      containers:\n        - name: casdoor-container\n          image: casbin/casdoor:latest\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8000\n          volumeMounts:\n            # the mounted directory path in THE CONTAINER\n            - mountPath: /conf\n              name: conf\n          env:       \n            - name: RUNNING_IN_DOCKER\n              value: \"true\"\n      #if you want to deploy this in real prod env, consider the config map\n      volumes:\n        - name: conf\n          hostPath:\n            #EDIT IT: the mounted directory path in THE HOST\n            path: /conf\n\n")),(0,r.kt)("p",null,"Por favor, ten en cuenta que este archivo es solo un ejemplo. Puedes realizar varias modificaciones seg\xfan tus requisitos, como usar un espacio de nombres diferente, tipo de servicio, o un ConfigMap para montar el archivo de configuraci\xf3n. Usar un ConfigMap es un enfoque recomendado en Kubernetes para montar archivos de configuraci\xf3n en un entorno de producci\xf3n."))}p.isMDXComponent=!0}}]);